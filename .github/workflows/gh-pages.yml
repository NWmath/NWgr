name: gh-pages
on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    name: build
    container: amath583/gh-pages
    steps:
      - name: 'Some testing of environment'
        run: |
          echo "Hello World"
          /bin/ls -la /usr/local/bin
          /bin/pwd
          /bin/hostname
          echo "'uname -s' is:"
          echo "uname: " $(uname)
          echo "uname -m: " $(uname -m)
          echo "uname -r:" $(uname -r)
          echo "uname -s: " $(uname -s)
          echo "uname -v: " $(uname -v)
      - name: 'Checkout NWgraph'
        uses: actions/checkout@master
        with:
          fetch-depth: 0 #
      - name: 'Build compile_commeands.json'
        run: |
          mkdir -p build
          cd build ; cmake .. -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
      - name: 'Build documentation'
        run: |
          /bin/pwd
          /bin/ls -la
          cd doc-src/sphinx ; make html
      - name: Force push to destination branch
        uses: ad-m/github-push-action@v0.5.0
        with:
          # Token for the repo
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Destination branch to push changes
          branch: gh-pages
          # Use force push to fully overwrite the destination branch
          force: true
          # We have to push from the folder where files were generated.
          # Same were the new repo was initialized in the previous step
          directory: ./doc-src/_build/html

# cpuinfo:
#   runs-on: ubuntu-latest
#   name: cpuinfo
#   container: amath583/cpuinfo
#   steps:
#     - run: |
#         echo "Hello World"
#         /bin/ls -la /usr/local/bin
#         /bin/pwd
#         /bin/hostname
#         echo "'uname -s' is:"
#         echo "uname: " $(uname)
#         echo "uname -m: " $(uname -m)
#         echo "uname -r:" $(uname -r)
#         echo "uname -s: " $(uname -s)
#         echo "uname -v: " $(uname -v)
#       name: 'step one'

# jobs:
#   my_job:
#     container:
#       image: node:14.16
#       env:
#         NODE_ENV: development
#       ports:
#         - 80
#       volumes:
#         - my_docker_volume:/volume_mount
#       options: --cpus 1
