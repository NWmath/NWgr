FROM ubuntu:20.04

RUN DEBIAN_FRONTEND=noninteractive \
    apt-get -y update    \
               &&        \
    apt-get -y install   \
               apt-utils 

RUN DEBIAN_FRONTEND=noninteractive \
    apt-get -y install   \
               man       \
               manpages  \
               make      \
               ssh       \
               tcsh      \
               emacs     \
               sudo      


RUN DEBIAN_FRONTEND=noninteractive \
    apt-get -y install    \
               libtbb2    \
               libtbb-dev 

RUN DEBIAN_FRONTEND=noninteractive	\
    		apt-get -y install	\
    	        libboost-system-dev	\
		libboost-filesystem-dev \
		libyaml-cpp-dev 	\
		cmake			\
		ninja-build		


RUN DEBIAN_FRONTEND=noninteractive	\
    		apt-get -y install	\
		software-properties-common



RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
RUN apt-add-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-10 main'
RUN apt-add-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'

# RUN apt-add-repository 'deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-10 main'
# RUN apt-add-repository 'deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'


# RUN DEBIAN_FRONTEND=noninteractive	\
#    		apt-get -y install	\
#		libllvm-10-ocaml-dev libllvm10 llvm-10 llvm-10-dev llvm-10-doc llvm-10-examples llvm-10-runtime \
#	 	clang-10 clang-tools-10 clang-10-doc libclang-common-10-dev libclang-10-dev libclang1-10 clang-format-10 python-clang-10 clangd-10 \
#		lldb-10 lld-10 libc++-10-dev libc++abi-10-dev libomp-10-dev


RUN DEBIAN_FRONTEND=noninteractive	\
    		apt-get -y install	\
		libllvm11  		\
		llvm-11			\
		llvm-11-dev		\
		clang-tools-11		\
		libclang-common-11-dev  \
		clang-11  		\
		libclang-11-dev 		


RUN DEBIAN_FRONTEND=noninteractive	\
    		apt-get -y install	\
		git


RUN DEBIAN_FRONTEND=noninteractive \
    apt-get -y install     \
    	       python3     \
       	       python3-pip 


RUN DEBIAN_FRONTEND=noninteractive \
               apt-get -y install  \
	       pdf2svg 	  	   \
    	       texlive-xetex       \
	       xzdec	           \
	       texlive-font-utils  \
	       texlive-fonts-extra \
	       texlive-fonts-recommended

   

RUN echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections
RUN apt-get -y install ttf-mscorefonts-installer
COPY xkcd-script.ttf /usr/local/share/fonts/

RUN fc-cache

RUN paperconfig --paper letter

#RUN tlmgr init-usertree
#RUN tlmgr option repository ftp://tug.org/historic/systems/texlive/2018/tlnet-final


RUN apt-get -y clean

RUN pip3 install -U sphinx

RUN pip3 install -U sphinxcontrib.bibtex 
RUN pip3 install -U sphinxcontrib.tikz
RUN pip3 install -U sphinxcontrib.proof 
RUN pip3 install -U sphinxcontrib.datatemplates
RUN pip3 install -U recommonmark 
RUN pip3 install -U hieroglyph 
RUN pip3 install -U nbsphinx
RUN pip3 install -U jinja2_highlight

# RUN sed -i.bak "/NOQA/ a \ \ \ \ \ \ \ \ self.environment.add_extension(\'jinja2_highlight.HighlightExtension\')" /usr/local/lib/python3.7/dist-packages/sphinx/jinja2glue.py

USER root

RUN \
       update-alternatives --install /usr/bin/python python /usr/bin/python3 10					  \
    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9 \
    && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30						  \
    && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30						  \
    && update-alternatives --install /usr/bin/clang   clang   /usr/bin/clang-11   40				  \
    && update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-11 40				  \
    && update-alternatives --install /usr/bin/c++     c++     /usr/bin/clang++-11 50				  \
    && update-alternatives --install /usr/bin/cc      cc      /usr/bin/clang-11   50

RUN useradd -m nwmath

USER nwmath
RUN mkdir /home/nwmath/NWmath
WORKDIR /home/nwmath
RUN git clone https://github.com/adobe/hyde.git
WORKDIR /home/nwmath/hyde
RUN git submodule update --init
RUN mkdir build
WORKDIR /home/nwmath/hyde/build

RUN sed -i.bak 's/const bool is_negative = (x <= 0) and (x != 0)/const bool is_negative = (x < 0)/' ../include/nlohmann/detail/output/serializer.hpp

RUN sed -i.bak 's/failure |= check_editable_scalar(filepath, have, expected, "", merged, "title");/failure |= check_scalar(filepath, have, expected, "", merged, "title");/' ../emitters/yaml_base_emitter.cpp

RUN cmake .. -GNinja && ninja

WORKDIR /home/nwmath/

ENV SHELL       /bin/bash
