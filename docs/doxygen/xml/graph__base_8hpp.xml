<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="graph__base_8hpp" kind="file" language="C++">
    <compoundname>graph_base.hpp</compoundname>
    <includes local="no">array</includes>
    <includes local="no">cstddef</includes>
    <includedby refid="access_8hpp" local="yes">/Users/lums/NWmath/NWgr/include/nwgraph/access.hpp</includedby>
    <includedby refid="adjacency_8hpp" local="yes">/Users/lums/NWmath/NWgr/include/nwgraph/adjacency.hpp</includedby>
    <includedby refid="build_8hpp" local="yes">/Users/lums/NWmath/NWgr/include/nwgraph/build.hpp</includedby>
    <includedby refid="compressed_8hpp" local="yes">/Users/lums/NWmath/NWgr/include/nwgraph/containers/compressed.hpp</includedby>
    <includedby refid="edge__list_8hpp" local="yes">/Users/lums/NWmath/NWgr/include/nwgraph/edge_list.hpp</includedby>
    <includedby refid="vofos_8hpp" local="yes">/Users/lums/NWmath/NWgr/include/nwgraph/vofos.hpp</includedby>
    <includedby refid="volos_8hpp" local="yes">/Users/lums/NWmath/NWgr/include/nwgraph/volos.hpp</includedby>
    <includedby refid="vovos_8hpp" local="yes">/Users/lums/NWmath/NWgr/include/nwgraph/vovos.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/graph_base.hpp</label>
        <link refid="graph__base_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>array</label>
      </node>
      <node id="3">
        <label>cstddef</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/access.hpp</label>
        <link refid="access_8hpp_source"/>
      </node>
      <node id="3">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/adjacency.hpp</label>
        <link refid="adjacency_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/algorithms/bfs.hpp</label>
        <link refid="algorithms_2bfs_8hpp"/>
      </node>
      <node id="12">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/algorithms/delta_stepping.hpp</label>
        <link refid="algorithms_2delta__stepping_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/algorithms/page_rank.hpp</label>
        <link refid="algorithms_2page__rank_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/algorithms/spMatspMat.hpp</label>
        <link refid="sp_matsp_mat_8hpp_source"/>
      </node>
      <node id="7">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/build.hpp</label>
        <link refid="build_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/containers/compressed.hpp</label>
        <link refid="compressed_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/coo.hpp</label>
        <link refid="coo_8hpp_source"/>
      </node>
      <node id="4">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/csc.hpp</label>
        <link refid="csc_8hpp_source"/>
      </node>
      <node id="5">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/csr.hpp</label>
        <link refid="csr_8hpp_source"/>
      </node>
      <node id="17">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/edge_list.hpp</label>
        <link refid="edge__list_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/experimental/algorithms/bfs.hpp</label>
        <link refid="experimental_2algorithms_2bfs_8hpp_source"/>
      </node>
      <node id="13">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/experimental/algorithms/delta_stepping.hpp</label>
        <link refid="experimental_2algorithms_2delta__stepping_8hpp_source"/>
      </node>
      <node id="15">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/experimental/algorithms/page_rank.hpp</label>
        <link refid="experimental_2algorithms_2page__rank_8hpp_source"/>
      </node>
      <node id="20">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/generators/configuration_model.hpp</label>
        <link refid="configuration__model_8hpp_source"/>
      </node>
      <node id="1">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/graph_base.hpp</label>
        <link refid="graph__base_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio.hpp</label>
        <link refid="mmio_8hpp_source"/>
      </node>
      <node id="8">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/vofos.hpp</label>
        <link refid="vofos_8hpp_source"/>
      </node>
      <node id="9">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/volos.hpp</label>
        <link refid="volos_8hpp_source"/>
      </node>
      <node id="21">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/vovos.hpp</label>
        <link refid="vovos_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structnw_1_1graph_1_1other__succession" prot="public">nw::graph::other_succession</innerclass>
    <innerclass refid="structnw_1_1graph_1_1other__succession_3_01succession_1_1successor_01_4" prot="public">nw::graph::other_succession&lt; succession::successor &gt;</innerclass>
    <innerclass refid="structnw_1_1graph_1_1other__succession_3_01succession_1_1predecessor_01_4" prot="public">nw::graph::other_succession&lt; succession::predecessor &gt;</innerclass>
    <innerclass refid="structnw_1_1graph_1_1other__direction" prot="public">nw::graph::other_direction</innerclass>
    <innerclass refid="structnw_1_1graph_1_1other__direction_3_01directedness_1_1undirected_01_4" prot="public">nw::graph::other_direction&lt; directedness::undirected &gt;</innerclass>
    <innerclass refid="classnw_1_1graph_1_1other__direction_3_01directedness_1_1directed_01_4" prot="public">nw::graph::other_direction&lt; directedness::directed &gt;</innerclass>
    <innerclass refid="classnw_1_1graph_1_1unipartite__graph__base" prot="public">nw::graph::unipartite_graph_base</innerclass>
    <innerclass refid="classnw_1_1graph_1_1bipartite__graph__base" prot="public">nw::graph::bipartite_graph_base</innerclass>
    <innerclass refid="structnw_1_1graph_1_1is__unipartite" prot="public">nw::graph::is_unipartite</innerclass>
    <innerclass refid="structnw_1_1graph_1_1is__unipartite_3_01unipartite__graph__base_01_4" prot="public">nw::graph::is_unipartite&lt; unipartite_graph_base &gt;</innerclass>
    <innernamespace refid="namespacenw">nw</innernamespace>
    <innernamespace refid="namespacenw_1_1graph">nw::graph</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NW<sp/>Graph<sp/>(aka<sp/>GraphPack)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(c)<sp/>Pacific<sp/>Northwest<sp/>National<sp/>Laboratory<sp/>2018-2021<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(c)<sp/>University<sp/>of<sp/>Washington<sp/>2018-2021<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>terms<sp/>of<sp/>include<sp/>LICENSE<sp/>file<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Authors:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Andrew<sp/>Lumsdaine<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NW_GRAPH_GRAPH_BASE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NW_GRAPH_GRAPH_BASE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">nw<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">graph<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>succession<sp/>{<sp/>successor,<sp/>predecessor<sp/>};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>directedness<sp/>{<sp/>undirected,<sp/>directed<sp/>};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;succession<sp/>success&gt;</highlight></codeline>
<codeline lineno="25" refid="structnw_1_1graph_1_1other__succession" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnw_1_1graph_1_1other__succession" kindref="compound">other_succession</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>succession<sp/>cessor;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="30" refid="structnw_1_1graph_1_1other__succession_3_01succession_1_1successor_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnw_1_1graph_1_1other__succession" kindref="compound">other_succession</ref>&lt;succession::successor&gt;<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>succession<sp/>cessor<sp/>=<sp/>succession::predecessor;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="35" refid="structnw_1_1graph_1_1other__succession_3_01succession_1_1predecessor_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnw_1_1graph_1_1other__succession" kindref="compound">other_succession</ref>&lt;succession::predecessor&gt;<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>succession<sp/>cessor<sp/>=<sp/>succession::successor;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;directedness<sp/>dir&gt;</highlight></codeline>
<codeline lineno="40" refid="structnw_1_1graph_1_1other__direction" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnw_1_1graph_1_1other__direction" kindref="compound">other_direction</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>directedness<sp/>direction;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="45" refid="structnw_1_1graph_1_1other__direction_3_01directedness_1_1undirected_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnw_1_1graph_1_1other__direction" kindref="compound">other_direction</ref>&lt;directedness::undirected&gt;<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>directedness<sp/>direction<sp/>=<sp/>directedness::directed;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="50" refid="classnw_1_1graph_1_1other__direction_3_01directedness_1_1directed_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="structnw_1_1graph_1_1other__direction" kindref="compound">other_direction</ref>&lt;directedness::directed&gt;<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>directedness<sp/>direction<sp/>=<sp/>directedness::undirected;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classnw_1_1graph_1_1unipartite__graph__base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnw_1_1graph_1_1unipartite__graph__base" kindref="compound">unipartite_graph_base</ref><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>vertex_cardinality_t<sp/>=<sp/>std::array&lt;size_t,<sp/>1&gt;;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="classnw_1_1graph_1_1unipartite__graph__base" kindref="compound">unipartite_graph_base</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>d0<sp/>=<sp/>0)<sp/>:<sp/>vertex_cardinality{d0},<sp/>is_open(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>num_edges()<sp/>{<sp/>return<sp/>num_edges_;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>vertex_cardinality_t<sp/>vertex_cardinality;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_open;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>we<sp/>mutate<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classnw_1_1graph_1_1bipartite__graph__base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnw_1_1graph_1_1bipartite__graph__base" kindref="compound">bipartite_graph_base</ref><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>vertex_cardinality_t<sp/>=<sp/>std::array&lt;size_t,<sp/>2&gt;;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="classnw_1_1graph_1_1bipartite__graph__base" kindref="compound">bipartite_graph_base</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>d0<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>d1<sp/>=<sp/>0)<sp/>:<sp/>vertex_cardinality{d0,<sp/>d1},<sp/>is_open(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classnw_1_1graph_1_1bipartite__graph__base" kindref="compound">bipartite_graph_base</ref>(vertex_cardinality_t<sp/>cardinality)<sp/>:<sp/>vertex_cardinality(cardinality),<sp/>is_open(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>num_edges()<sp/>{<sp/>return<sp/>num_edges_;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>vertex_cardinality_t<sp/>vertex_cardinality;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ordinal<sp/>limits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_open;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>we<sp/>mutate<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>NON-unipartite_graph_base,<sp/>is_unipartite&lt;unipartite_graph_base&gt;<sp/>==<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Graph_base&gt;</highlight></codeline>
<codeline lineno="84" refid="structnw_1_1graph_1_1is__unipartite" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnw_1_1graph_1_1is__unipartite" kindref="compound">is_unipartite</ref><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>unipartite_graph_base,<sp/>is_unipartite&lt;unipartite_graph_base&gt;<sp/>==<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="90" refid="structnw_1_1graph_1_1is__unipartite_3_01unipartite__graph__base_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnw_1_1graph_1_1is__unipartite" kindref="compound">is_unipartite</ref>&lt;<ref refid="classnw_1_1graph_1_1unipartite__graph__base" kindref="compound">unipartite_graph_base</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NW_GRAPH_GRAPH_BASE_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/lums/NWmath/NWgr/include/nwgraph/graph_base.hpp"/>
  </compounddef>
</doxygen>
