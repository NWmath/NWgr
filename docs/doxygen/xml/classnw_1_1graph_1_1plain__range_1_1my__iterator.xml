<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classnw_1_1graph_1_1plain__range_1_1my__iterator" kind="class" language="C++" prot="public">
    <compoundname>nw::graph::plain_range::my_iterator</compoundname>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>is_const</declname>
        <defname>is_const</defname>
        <defval>false</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a125e7945e2ce0fcb65577f8e8d1b2c23" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>using nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::iterator_category =  std::forward_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::iterator_category</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="64" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a19e6625840636cf3dcf859b5b1e05e67" prot="public" static="no">
        <type>std::tuple&lt; vertex_id_type &gt;</type>
        <definition>using nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::value_type =  std::tuple&lt;vertex_id_type&gt;</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="65" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1abbd0c79288cb967f1058eb0837fb264b" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::difference_type =  std::size_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="66" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1ab8311fe2ec047acbf6005d3922d4b040" prot="public" static="no">
        <type>value_type &amp;</type>
        <definition>using nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::reference =  value_type&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="67" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a77e9d2043ff97344b56ed2372231bf50" prot="public" static="no">
        <type>value_type *</type>
        <definition>using nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::pointer =  value_type*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="68" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1ac097e2037c90071b1cf53524603bd9b3" prot="private" static="no" mutable="no">
        <type>graph_iterator</type>
        <definition>graph_iterator nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::base_</definition>
        <argsstring></argsstring>
        <name>base_</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::base_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="71" column="20" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a5ea157c1fc3f44f74a0a36f67a0c963f" prot="private" static="no" mutable="no">
        <type>graph_iterator</type>
        <definition>graph_iterator nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::first_</definition>
        <argsstring></argsstring>
        <name>first_</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::first_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="72" column="20" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a41e1d67e6e33b20c3b7d9929af98cb29" prot="private" static="no" mutable="no">
        <type>graph_iterator</type>
        <definition>graph_iterator nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::last_</definition>
        <argsstring></argsstring>
        <name>last_</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::last_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="73" column="20" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a945a8278529c23cf74caaa3e9919d7b4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::my_iterator</definition>
        <argsstring>(const my_iterator &amp;b, unsigned long step)</argsstring>
        <name>my_iterator</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::my_iterator</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1plain__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="75" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1ade7914b74f9338d1919e89ace90d57b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::my_iterator</definition>
        <argsstring>(graph_iterator base, graph_iterator begin, graph_iterator end)</argsstring>
        <name>my_iterator</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::my_iterator</qualifiedname>
        <param>
          <type>graph_iterator</type>
          <declname>base</declname>
        </param>
        <param>
          <type>graph_iterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>graph_iterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="78" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a7bb06368e5ba67ef3c94c83397143ef9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::my_iterator</definition>
        <argsstring>(const my_iterator &amp;)=default</argsstring>
        <name>my_iterator</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::my_iterator</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1plain__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="80" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a5ad0c1de01eb66db8266b85c5d5f1042" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1plain__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
        <definition>my_iterator &amp; nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator=</definition>
        <argsstring>(const my_iterator &amp;b)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1plain__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="81" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a93f676dbb0ce749974b70fb60fcf3bf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>was_const</declname>
            <defname>was_const</defname>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;is_const &amp;&amp; !was_const&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::my_iterator</definition>
        <argsstring>(const my_iterator&lt; was_const &gt; &amp;rhs)</argsstring>
        <name>my_iterator</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::my_iterator</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1plain__range_1_1my__iterator" kindref="compound">my_iterator</ref>&lt; was_const &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="84" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a1050eb2c8c2c7bf85b899b33e9d8dbe8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>was_const</declname>
            <defname>was_const</defname>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;is_const &amp;&amp; !was_const&gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classnw_1_1graph_1_1plain__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
        <definition>my_iterator &amp; nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator=</definition>
        <argsstring>(const my_iterator&lt; was_const &gt; &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1plain__range_1_1my__iterator" kindref="compound">my_iterator</ref>&lt; was_const &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="87" column="17" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="87" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a21d873e0343c37fd2f639e8697d8fb47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1plain__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
        <definition>my_iterator &amp; nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="94" column="17" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a763d9b84733f60770a5be4ee690e12c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::operator*</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="99" column="10" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1af8b43c5300d7deef5a19f722c5e53208" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::operator*</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="101" column="10" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a5bfc7276ede26cb974374160fb46a7f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator==</definition>
        <argsstring>(const my_iterator &amp;b) const</argsstring>
        <name>operator==</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1plain__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="103" column="10" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a254621b3417ba83391e89692d8e08913" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator!=</definition>
        <argsstring>(const my_iterator &amp;b) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1plain__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="104" column="10" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1af957c87007782c265436fbe2b5b4ceb6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator&lt;</definition>
        <argsstring>(const my_iterator &amp;b) const</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1plain__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="105" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1ad296d24dbc72c5c9c9567cfcfe420f69" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>difference_type</type>
        <definition>difference_type nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator-</definition>
        <argsstring>(const my_iterator &amp;b) const</argsstring>
        <name>operator-</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::operator-</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1plain__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="107" column="21" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1plain__range_1_1my__iterator_1af7a5d63d93c18955099b9b0e2a14a097" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1plain__range_1_1my__iterator" kindref="compound">my_iterator</ref></type>
        <definition>my_iterator nw::graph::plain_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator+</definition>
        <argsstring>(difference_type step) const</argsstring>
        <name>operator+</name>
        <qualifiedname>nw::graph::plain_range::my_iterator::operator+</qualifiedname>
        <param>
          <type>difference_type</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="108" column="21" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="108" bodyend="108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" line="62" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/plain_range.hpp" bodystart="62" bodyend="109"/>
    <listofallmembers>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1ac097e2037c90071b1cf53524603bd9b3" prot="private" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>base_</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1abbd0c79288cb967f1058eb0837fb264b" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>difference_type</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a5ea157c1fc3f44f74a0a36f67a0c963f" prot="private" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>first_</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a125e7945e2ce0fcb65577f8e8d1b2c23" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>iterator_category</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a41e1d67e6e33b20c3b7d9929af98cb29" prot="private" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>last_</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a945a8278529c23cf74caaa3e9919d7b4" prot="private" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>my_iterator</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1ade7914b74f9338d1919e89ace90d57b3" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>my_iterator</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a7bb06368e5ba67ef3c94c83397143ef9" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>my_iterator</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a93f676dbb0ce749974b70fb60fcf3bf4" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>my_iterator</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a254621b3417ba83391e89692d8e08913" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>operator!=</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a763d9b84733f60770a5be4ee690e12c2" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>operator*</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1af8b43c5300d7deef5a19f722c5e53208" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>operator*</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1af7a5d63d93c18955099b9b0e2a14a097" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>operator+</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a21d873e0343c37fd2f639e8697d8fb47" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>operator++</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1ad296d24dbc72c5c9c9567cfcfe420f69" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>operator-</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1af957c87007782c265436fbe2b5b4ceb6" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>operator&lt;</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a5ad0c1de01eb66db8266b85c5d5f1042" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>operator=</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a1050eb2c8c2c7bf85b899b33e9d8dbe8" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>operator=</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a5bfc7276ede26cb974374160fb46a7f1" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>operator==</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a77e9d2043ff97344b56ed2372231bf50" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>pointer</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1ab8311fe2ec047acbf6005d3922d4b040" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>reference</name></member>
      <member refid="classnw_1_1graph_1_1plain__range_1_1my__iterator_1a19e6625840636cf3dcf859b5b1e05e67" prot="public" virt="non-virtual"><scope>nw::graph::plain_range::my_iterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
