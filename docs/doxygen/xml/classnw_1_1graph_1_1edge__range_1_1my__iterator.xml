<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classnw_1_1graph_1_1edge__range_1_1my__iterator" kind="class" language="C++" prot="public">
    <compoundname>nw::graph::edge_range::my_iterator</compoundname>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>is_const</declname>
        <defname>is_const</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a8cdb8445cc505a5bbbd6daeb3a2e4128" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>using nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::iterator_category =  std::forward_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::iterator_category</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="66" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1afe0da80ebe9fbabe49cb503f4ad22210" prot="public" static="no">
        <type>std::tuple&lt; vertex_id_type, vertex_id_type, typename std::tuple_element_t&lt; Is, std::conditional_t&lt; is_const, const attributes_t&lt; Graph &gt;, attributes_t&lt; Graph &gt; &gt; &gt; ... &gt;</type>
        <definition>using nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::value_type =  std::tuple&lt; vertex_id_type, vertex_id_type, typename std::tuple_element_t&lt;Is, std::conditional_t&lt;is_const, const attributes_t&lt;Graph&gt;, attributes_t&lt;Graph&gt; &gt;&gt; ...&gt;</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="67" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a041a9d4d26b54c34559b37a433680a69" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="70" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a0402ae94e2aac36cea8687ae374ddc9c" prot="public" static="no">
        <type>std::tuple&lt; vertex_id_type, vertex_id_type, typename std::tuple_element_t&lt; Is, std::conditional_t&lt; is_const, const attributes_t&lt; Graph &gt;, attributes_t&lt; Graph &gt; &gt; &gt; &amp;... &gt;</type>
        <definition>using nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::reference =  std::tuple&lt; vertex_id_type, vertex_id_type, typename std::tuple_element_t&lt;Is, std::conditional_t&lt;is_const, const attributes_t&lt;Graph&gt;, attributes_t&lt;Graph&gt; &gt;&gt;&amp;...&gt;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="71" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a5933962a9864bd21bdd1af0445ced3dd" prot="public" static="no">
        <type><ref refid="structnw_1_1graph_1_1arrow__proxy" kindref="compound">arrow_proxy</ref>&lt; reference &gt;</type>
        <definition>using nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::pointer =  arrow_proxy&lt;reference&gt;</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="74" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a2ad62378b1dac43e78fd12bb257f1b34" prot="private" static="no" mutable="no">
        <type>graph_iterator</type>
        <definition>graph_iterator nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::base_</definition>
        <argsstring></argsstring>
        <name>base_</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::base_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="77" column="26" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1ac2710832eded384acfe33305002a121e" prot="private" static="no" mutable="no">
        <type>graph_iterator</type>
        <definition>graph_iterator nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::first_</definition>
        <argsstring></argsstring>
        <name>first_</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::first_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="78" column="26" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a6a5f387abb7f9363d19bf7bf1e1d2ca7" prot="private" static="no" mutable="no">
        <type>graph_iterator</type>
        <definition>graph_iterator nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::last_</definition>
        <argsstring></argsstring>
        <name>last_</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::last_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="79" column="26" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a2cc575c2b8640e89649e789972c1280c" prot="private" static="no" mutable="no">
        <type>graph_inner_iterator</type>
        <definition>graph_inner_iterator nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::u_begin_</definition>
        <argsstring></argsstring>
        <name>u_begin_</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::u_begin_</qualifiedname>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="80" column="26" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1aa1c59ee50f17aa659347258f43edf4d7" prot="private" static="no" mutable="no">
        <type>graph_inner_iterator</type>
        <definition>graph_inner_iterator nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::u_end_</definition>
        <argsstring></argsstring>
        <name>u_end_</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::u_end_</qualifiedname>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="81" column="26" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1ab5f51686183fb9223036e405e5efaeca" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::my_iterator</definition>
        <argsstring>(const my_iterator &amp;b, unsigned long step)</argsstring>
        <name>my_iterator</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::my_iterator</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="83" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a96d9923deb5e481d370b504d21b5852f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::check</definition>
        <argsstring>()</argsstring>
        <name>check</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::check</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="85" column="10" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="85" bodyend="92"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a0dcb388c6d368960db8e8e61ee0a64f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::my_iterator</definition>
        <argsstring>(graph_iterator base, graph_iterator begin, graph_iterator end)</argsstring>
        <name>my_iterator</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::my_iterator</qualifiedname>
        <param>
          <type>graph_iterator</type>
          <declname>base</declname>
        </param>
        <param>
          <type>graph_iterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>graph_iterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="95" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="95" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a9d6ea70af276afd5549d6a5f8e05c27c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::my_iterator</definition>
        <argsstring>(const my_iterator &amp;)=default</argsstring>
        <name>my_iterator</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::my_iterator</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="107" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a3c2f9a63c64a7627adcd0d5360e837ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::my_iterator</definition>
        <argsstring>(const my_iterator&lt; false &gt; &amp;rhs)</argsstring>
        <name>my_iterator</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::my_iterator</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">my_iterator</ref>&lt; false &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
    <requiresclause>(is_const)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="108" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="108" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a61af6a90c63c59fe97804552e0da3446" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
        <definition>my_iterator &amp; nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator=</definition>
        <argsstring>(const my_iterator &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="117" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1acd19f7d8cbdedb8f6edefe8b98809b26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
        <definition>my_iterator &amp; nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator=</definition>
        <argsstring>(const my_iterator&lt; false &gt; &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">my_iterator</ref>&lt; false &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
    <requiresclause>(is_const)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="118" column="17" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="118" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1abf0d90752c9fba8e5bb8987eeeaa3fcd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
        <definition>my_iterator &amp; nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="136" column="17" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="136" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a337de5afce3b5d84926c27bbf8b4fec4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">my_iterator</ref></type>
        <definition>my_iterator nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator++</definition>
        <argsstring>(int) const</argsstring>
        <name>operator++</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::operator++</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="144" column="17" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="144" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a9ac922c945c9d2cbaa6b8a5d8243eb1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::operator*</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="150" column="15" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1ab29b5117bf77a009340cd0e92c1cfef5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structnw_1_1graph_1_1arrow__proxy" kindref="compound">pointer</ref></type>
        <definition>pointer nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::operator-&gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="152" column="13" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a6b8c1232883a5dba68e1ff339137a1e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>difference_type</type>
        <definition>difference_type nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator-</definition>
        <argsstring>(const my_iterator &amp;b) const</argsstring>
        <name>operator-</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::operator-</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="154" column="21" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a314378cedff70787fa32bdd26a381717" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">my_iterator</ref></type>
        <definition>my_iterator nw::graph::edge_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator+</definition>
        <argsstring>(difference_type step) const</argsstring>
        <name>operator+</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::operator+</qualifiedname>
        <param>
          <type>difference_type</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="155" column="21" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="155" bodyend="155"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a58dd2d6bc22e3be8c39cf235c9784b50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const my_iterator &amp;a, const my_iterator &amp;b)</argsstring>
        <name>operator==</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="128" column="17" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="friend" id="classnw_1_1graph_1_1edge__range_1_1my__iterator_1ad8b65e05d9c7d128a06e43d6033d026d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto operator&lt;=&gt;</definition>
        <argsstring>(const my_iterator &amp;a, const my_iterator &amp;b)</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>nw::graph::edge_range::my_iterator::operator&lt;=&gt;</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="132" column="12" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="132" bodyend="134"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="64" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="64" bodyend="156"/>
    <listofallmembers>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a2ad62378b1dac43e78fd12bb257f1b34" prot="private" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>base_</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a96d9923deb5e481d370b504d21b5852f" prot="private" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>check</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a041a9d4d26b54c34559b37a433680a69" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>difference_type</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1ac2710832eded384acfe33305002a121e" prot="private" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>first_</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a8cdb8445cc505a5bbbd6daeb3a2e4128" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>iterator_category</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a6a5f387abb7f9363d19bf7bf1e1d2ca7" prot="private" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>last_</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1ab5f51686183fb9223036e405e5efaeca" prot="private" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>my_iterator</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a0dcb388c6d368960db8e8e61ee0a64f1" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>my_iterator</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a9d6ea70af276afd5549d6a5f8e05c27c" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>my_iterator</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a3c2f9a63c64a7627adcd0d5360e837ff" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>my_iterator</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a9ac922c945c9d2cbaa6b8a5d8243eb1c" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>operator*</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a314378cedff70787fa32bdd26a381717" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>operator+</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1abf0d90752c9fba8e5bb8987eeeaa3fcd" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>operator++</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a337de5afce3b5d84926c27bbf8b4fec4" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>operator++</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a6b8c1232883a5dba68e1ff339137a1e7" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>operator-</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1ab29b5117bf77a009340cd0e92c1cfef5" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>operator-&gt;</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1ad8b65e05d9c7d128a06e43d6033d026d" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>operator&lt;=&gt;</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a61af6a90c63c59fe97804552e0da3446" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>operator=</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1acd19f7d8cbdedb8f6edefe8b98809b26" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>operator=</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a58dd2d6bc22e3be8c39cf235c9784b50" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>operator==</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a5933962a9864bd21bdd1af0445ced3dd" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>pointer</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a0402ae94e2aac36cea8687ae374ddc9c" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>reference</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1a2cc575c2b8640e89649e789972c1280c" prot="private" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>u_begin_</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1aa1c59ee50f17aa659347258f43edf4d7" prot="private" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>u_end_</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1_1my__iterator_1afe0da80ebe9fbabe49cb503f4ad22210" prot="public" virt="non-virtual"><scope>nw::graph::edge_range::my_iterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
