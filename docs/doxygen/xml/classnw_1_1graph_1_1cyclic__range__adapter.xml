<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classnw_1_1graph_1_1cyclic__range__adapter" kind="class" language="C++" prot="public">
    <compoundname>nw::graph::cyclic_range_adapter</compoundname>
    <includes refid="cyclic__range__adapter_8hpp" local="no">cyclic_range_adapter.hpp</includes>
    <innerclass refid="structnw_1_1graph_1_1cyclic__range__adapter_1_1iterator" prot="public">nw::graph::cyclic_range_adapter::iterator</innerclass>
    <templateparamlist>
      <param>
        <type>class Iterator</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnw_1_1graph_1_1cyclic__range__adapter_1a580a218b50770779c171dc97847e7821" prot="public" static="no">
        <type>typename std::iterator_traits&lt; Iterator &gt;::difference_type</type>
        <definition>using nw::graph::cyclic_range_adapter&lt; Iterator &gt;::difference_type =  typename std::iterator_traits&lt;Iterator&gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>nw::graph::cyclic_range_adapter::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" line="31" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnw_1_1graph_1_1cyclic__range__adapter_1ab88d61ca550e62d6d6dd1e35b59196b4" prot="private" static="no" mutable="no">
        <type>Iterator</type>
        <definition>Iterator nw::graph::cyclic_range_adapter&lt; Iterator &gt;::begin_</definition>
        <argsstring></argsstring>
        <name>begin_</name>
        <qualifiedname>nw::graph::cyclic_range_adapter::begin_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" line="34" column="19" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1cyclic__range__adapter_1a1f4bde4c40f542d49b6a898e72888ef0" prot="private" static="no" mutable="no">
        <type>Iterator</type>
        <definition>Iterator nw::graph::cyclic_range_adapter&lt; Iterator &gt;::end_</definition>
        <argsstring></argsstring>
        <name>end_</name>
        <qualifiedname>nw::graph::cyclic_range_adapter::end_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" line="35" column="19" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1cyclic__range__adapter_1afb30fc9eaf045090f5afff60b39ac18e" prot="private" static="no" mutable="no">
        <type>difference_type</type>
        <definition>difference_type nw::graph::cyclic_range_adapter&lt; Iterator &gt;::cutoff_</definition>
        <argsstring></argsstring>
        <name>cutoff_</name>
        <qualifiedname>nw::graph::cyclic_range_adapter::cutoff_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" line="36" column="19" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1cyclic__range__adapter_1a6283bc71bf86c7701132e542df981022" prot="private" static="no" mutable="no">
        <type>difference_type</type>
        <definition>difference_type nw::graph::cyclic_range_adapter&lt; Iterator &gt;::cycle_</definition>
        <argsstring></argsstring>
        <name>cycle_</name>
        <qualifiedname>nw::graph::cyclic_range_adapter::cycle_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" line="37" column="19" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1cyclic__range__adapter_1ab8b26b698af8650cf250af28f943de80" prot="private" static="no" mutable="no">
        <type>difference_type</type>
        <definition>difference_type nw::graph::cyclic_range_adapter&lt; Iterator &gt;::stride_</definition>
        <argsstring></argsstring>
        <name>stride_</name>
        <qualifiedname>nw::graph::cyclic_range_adapter::stride_</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" line="38" column="19" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__range__adapter_1afa21c43754107997c1e6c071709cf6ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Range</type>
          </param>
          <param>
            <type>class Cutoff</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>nw::graph::cyclic_range_adapter&lt; Iterator &gt;::cyclic_range_adapter</definition>
        <argsstring>(Range &amp;&amp;range, Cutoff cutoff)</argsstring>
        <name>cyclic_range_adapter</name>
        <qualifiedname>nw::graph::cyclic_range_adapter::cyclic_range_adapter</qualifiedname>
        <param>
          <type>Range &amp;&amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>Cutoff</type>
          <declname>cutoff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" line="42" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" bodystart="42" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__range__adapter_1a3ad5edc4434e43ab630642102cbd22f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nw::graph::cyclic_range_adapter&lt; Iterator &gt;::cyclic_range_adapter</definition>
        <argsstring>(const cyclic_range_adapter &amp;)=default</argsstring>
        <name>cyclic_range_adapter</name>
        <qualifiedname>nw::graph::cyclic_range_adapter::cyclic_range_adapter</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1cyclic__range__adapter" kindref="compound">cyclic_range_adapter</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" line="45" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__range__adapter_1a91a1093811de021f9f4813b294771636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nw::graph::cyclic_range_adapter&lt; Iterator &gt;::cyclic_range_adapter</definition>
        <argsstring>(cyclic_range_adapter &amp;&amp;)=default</argsstring>
        <name>cyclic_range_adapter</name>
        <qualifiedname>nw::graph::cyclic_range_adapter::cyclic_range_adapter</qualifiedname>
        <param>
          <type><ref refid="classnw_1_1graph_1_1cyclic__range__adapter" kindref="compound">cyclic_range_adapter</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" line="46" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__range__adapter_1a1913b2c59a2d80559cbd9a8f77b4c64f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nw::graph::cyclic_range_adapter&lt; Iterator &gt;::cyclic_range_adapter</definition>
        <argsstring>(cyclic_range_adapter &amp;rhs, tbb::split)</argsstring>
        <name>cyclic_range_adapter</name>
        <qualifiedname>nw::graph::cyclic_range_adapter::cyclic_range_adapter</qualifiedname>
        <param>
          <type><ref refid="classnw_1_1graph_1_1cyclic__range__adapter" kindref="compound">cyclic_range_adapter</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>tbb::split</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" line="48" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" bodystart="48" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__range__adapter_1a1680b3bd1936e90d04ea302837ae854a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structnw_1_1graph_1_1cyclic__range__adapter_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator nw::graph::cyclic_range_adapter&lt; Iterator &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>nw::graph::cyclic_range_adapter::begin</qualifiedname>
        <briefdescription>
<para>Return an iterator that points to the start of the cycle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" line="66" column="12" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__range__adapter_1af0143fa0610ced32d6b54aba4a8a0b89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structnw_1_1graph_1_1cyclic__range__adapter_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator nw::graph::cyclic_range_adapter&lt; Iterator &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>nw::graph::cyclic_range_adapter::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an iterator that points to the end of the cycle.</para>
<para>The end of the cycle is the first iterator in the cycle that is greater than or equal to the end_ iterator in the underlying range. End iterators for different cycles will be different even if the underlying range and strides match, so tests should not be performed across cycles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" line="74" column="12" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" bodystart="74" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__range__adapter_1abdbd7175ec7290827d0a69751402a0dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>difference_type</type>
        <definition>difference_type nw::graph::cyclic_range_adapter&lt; Iterator &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>nw::graph::cyclic_range_adapter::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" line="81" column="19" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" bodystart="81" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__range__adapter_1a349c3abcb6e06940d87642e877c9b200" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nw::graph::cyclic_range_adapter&lt; Iterator &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>nw::graph::cyclic_range_adapter::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" line="88" column="8" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__range__adapter_1ae80d40f27f09a2fd4c727372f028755c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nw::graph::cyclic_range_adapter&lt; Iterator &gt;::is_divisible</definition>
        <argsstring>() const</argsstring>
        <name>is_divisible</name>
        <qualifiedname>nw::graph::cyclic_range_adapter::is_divisible</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Runtime check to see if the range is divisible.</para>
<para>The range can be subdivided if its stride can be increased relative to the cutoff. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" line="94" column="8" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" bodystart="94" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>stride rather than in terms of the number of elements. A <emphasis>cutoff</emphasis> of <computeroutput>1</computeroutput> implies that the range can&apos;t be split, while a <computeroutput>_cutoff_</computeroutput> of <computeroutput>n</computeroutput> means that the range can be split into up to <computeroutput>n</computeroutput> cycles.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Iterator</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the underlying range iterator (must be at least random access). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" line="27" column="1" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_range_adapter.hpp" bodystart="27" bodyend="95"/>
    <listofallmembers>
      <member refid="classnw_1_1graph_1_1cyclic__range__adapter_1a1680b3bd1936e90d04ea302837ae854a" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_range_adapter</scope><name>begin</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__range__adapter_1ab88d61ca550e62d6d6dd1e35b59196b4" prot="private" virt="non-virtual"><scope>nw::graph::cyclic_range_adapter</scope><name>begin_</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__range__adapter_1afb30fc9eaf045090f5afff60b39ac18e" prot="private" virt="non-virtual"><scope>nw::graph::cyclic_range_adapter</scope><name>cutoff_</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__range__adapter_1a6283bc71bf86c7701132e542df981022" prot="private" virt="non-virtual"><scope>nw::graph::cyclic_range_adapter</scope><name>cycle_</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__range__adapter_1afa21c43754107997c1e6c071709cf6ce" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_range_adapter</scope><name>cyclic_range_adapter</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__range__adapter_1a3ad5edc4434e43ab630642102cbd22f1" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_range_adapter</scope><name>cyclic_range_adapter</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__range__adapter_1a91a1093811de021f9f4813b294771636" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_range_adapter</scope><name>cyclic_range_adapter</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__range__adapter_1a1913b2c59a2d80559cbd9a8f77b4c64f" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_range_adapter</scope><name>cyclic_range_adapter</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__range__adapter_1a580a218b50770779c171dc97847e7821" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_range_adapter</scope><name>difference_type</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__range__adapter_1a349c3abcb6e06940d87642e877c9b200" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_range_adapter</scope><name>empty</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__range__adapter_1af0143fa0610ced32d6b54aba4a8a0b89" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_range_adapter</scope><name>end</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__range__adapter_1a1f4bde4c40f542d49b6a898e72888ef0" prot="private" virt="non-virtual"><scope>nw::graph::cyclic_range_adapter</scope><name>end_</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__range__adapter_1ae80d40f27f09a2fd4c727372f028755c" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_range_adapter</scope><name>is_divisible</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__range__adapter_1abdbd7175ec7290827d0a69751402a0dc" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_range_adapter</scope><name>size</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__range__adapter_1ab8b26b698af8650cf250af28f943de80" prot="private" virt="non-virtual"><scope>nw::graph::cyclic_range_adapter</scope><name>stride_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
