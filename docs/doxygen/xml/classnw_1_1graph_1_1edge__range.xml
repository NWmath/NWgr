<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classnw_1_1graph_1_1edge__range" kind="class" language="C++" prot="public">
    <compoundname>nw::graph::edge_range</compoundname>
    <innerclass refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" prot="public">nw::graph::edge_range::my_iterator</innerclass>
    <templateparamlist>
      <param>
        <type>class Graph</type>
      </param>
      <param>
        <type>std::size_t...</type>
        <declname>Is</declname>
        <defname>Is</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classnw_1_1graph_1_1edge__range_1afcbef994318fc38592140738a2308ee3" prot="private" static="no">
        <type>vertex_id_t&lt; Graph &gt;</type>
        <definition>using nw::graph::edge_range&lt; Graph, Is &gt;::vertex_id_type =  vertex_id_t&lt;Graph&gt;</definition>
        <argsstring></argsstring>
        <name>vertex_id_type</name>
        <qualifiedname>nw::graph::edge_range::vertex_id_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="37" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnw_1_1graph_1_1edge__range_1a39dc50d78d6bb93c82bd5315f74e529b" prot="private" static="no">
        <type>std::conditional_t&lt; std::is_const_v&lt; Graph &gt;, const_iterator_t&lt; const Graph &gt;, iterator_t&lt; Graph &gt; &gt;</type>
        <definition>using nw::graph::edge_range&lt; Graph, Is &gt;::graph_iterator =  std::conditional_t&lt;std::is_const_v&lt;Graph&gt;, const_iterator_t&lt;const Graph&gt;, iterator_t&lt;Graph&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>graph_iterator</name>
        <qualifiedname>nw::graph::edge_range::graph_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="39" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnw_1_1graph_1_1edge__range_1abe39631f18adce0be446e90a9f456f8a" prot="private" static="no">
        <type>std::conditional_t&lt; std::is_const_v&lt; Graph &gt;, inner_const_iterator_t&lt; Graph &gt;, inner_iterator_t&lt; Graph &gt; &gt;</type>
        <definition>using nw::graph::edge_range&lt; Graph, Is &gt;::graph_inner_iterator =  std::conditional_t&lt;std::is_const_v&lt;Graph&gt;, inner_const_iterator_t&lt;Graph&gt;, inner_iterator_t&lt;Graph&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>graph_inner_iterator</name>
        <qualifiedname>nw::graph::edge_range::graph_inner_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="40" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnw_1_1graph_1_1edge__range_1a098b300223e447f9d204a2e46e8d7a1b" prot="public" static="no">
        <type><ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">my_iterator</ref>&lt; false &gt;</type>
        <definition>using nw::graph::edge_range&lt; Graph, Is &gt;::iterator =  my_iterator&lt;false&gt;</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <qualifiedname>nw::graph::edge_range::iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="158" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnw_1_1graph_1_1edge__range_1ac2a9b2c97831cffb07551aefa0b36b25" prot="public" static="no">
        <type><ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">my_iterator</ref>&lt; true &gt;</type>
        <definition>using nw::graph::edge_range&lt; Graph, Is &gt;::const_iterator =  my_iterator&lt;true&gt;</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <qualifiedname>nw::graph::edge_range::const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="159" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classnw_1_1graph_1_1edge__range_1a1839b9107d5349adbf65ad3ea7d7c1b8" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t nw::graph::edge_range&lt; Graph, Is &gt;::cutoff_</definition>
        <argsstring></argsstring>
        <name>cutoff_</name>
        <qualifiedname>nw::graph::edge_range::cutoff_</qualifiedname>
        <initializer>= 16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="35" column="27" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnw_1_1graph_1_1edge__range_1af5ce9f63f182c48b07f4fd1f2bfcde93" prot="private" static="no" mutable="no">
        <type>graph_iterator</type>
        <definition>graph_iterator nw::graph::edge_range&lt; Graph, Is &gt;::outer_base_</definition>
        <argsstring></argsstring>
        <name>outer_base_</name>
        <qualifiedname>nw::graph::edge_range::outer_base_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="42" column="18" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1edge__range_1aa27634358f83c7a951021b2efa398aa3" prot="private" static="no" mutable="no">
        <type>graph_iterator</type>
        <definition>graph_iterator nw::graph::edge_range&lt; Graph, Is &gt;::outer_begin_</definition>
        <argsstring></argsstring>
        <name>outer_begin_</name>
        <qualifiedname>nw::graph::edge_range::outer_begin_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="43" column="18" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1edge__range_1ac69b3b688e872b5ae87a8b2a01454eaa" prot="private" static="no" mutable="no">
        <type>graph_iterator</type>
        <definition>graph_iterator nw::graph::edge_range&lt; Graph, Is &gt;::outer_end_</definition>
        <argsstring></argsstring>
        <name>outer_end_</name>
        <qualifiedname>nw::graph::edge_range::outer_end_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="44" column="18" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1a741abc56321790b64beccb4aac6acd30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nw::graph::edge_range&lt; Graph, Is &gt;::edge_range</definition>
        <argsstring>(Graph &amp;g, std::size_t offset, std::index_sequence&lt; Is... &gt;={})</argsstring>
        <name>edge_range</name>
        <qualifiedname>nw::graph::edge_range::edge_range</qualifiedname>
        <param>
          <type>Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; Is... &gt;</type>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="47" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="47" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1a7c4c579a4b1028c43db6cf81550b5eb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nw::graph::edge_range&lt; Graph, Is &gt;::edge_range</definition>
        <argsstring>(Graph &amp;g, std::index_sequence&lt; Is... &gt; is={})</argsstring>
        <name>edge_range</name>
        <qualifiedname>nw::graph::edge_range::edge_range</qualifiedname>
        <param>
          <type>Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; Is... &gt;</type>
          <declname>is</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="50" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1ab354fae805a517bfc344e0c8bcd34b1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nw::graph::edge_range&lt; Graph, Is &gt;::edge_range</definition>
        <argsstring>(edge_range &amp;b, tbb::split)</argsstring>
        <name>edge_range</name>
        <qualifiedname>nw::graph::edge_range::edge_range</qualifiedname>
        <param>
          <type><ref refid="classnw_1_1graph_1_1edge__range" kindref="compound">edge_range</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>tbb::split</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="53" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1aa4f3c734d25c044cd4a4a1fc2f159d6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nw::graph::edge_range&lt; Graph, Is &gt;::edge_range</definition>
        <argsstring>(const edge_range &amp;)=default</argsstring>
        <name>edge_range</name>
        <qualifiedname>nw::graph::edge_range::edge_range</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1edge__range" kindref="compound">edge_range</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="60" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1a79b1baa91b649e1432b79792337ceda8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1edge__range" kindref="compound">edge_range</ref> &amp;</type>
        <definition>edge_range &amp; nw::graph::edge_range&lt; Graph, Is &gt;::operator=</definition>
        <argsstring>(const edge_range &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>nw::graph::edge_range::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1edge__range" kindref="compound">edge_range</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="61" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1a1f22ce6dcc85df2cc88a732326bd6b9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">iterator</ref></type>
        <definition>iterator nw::graph::edge_range&lt; Graph, Is &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>nw::graph::edge_range::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="161" column="18" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1a9562699ec18b26b9753c3045824f3cea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator nw::graph::edge_range&lt; Graph, Is &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>nw::graph::edge_range::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="162" column="18" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1a129bb8ff8d4ff642cf8179086a065213" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">iterator</ref></type>
        <definition>iterator nw::graph::edge_range&lt; Graph, Is &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>nw::graph::edge_range::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="164" column="18" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1a793f866768e60af14d9ac693e9f36e5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1edge__range_1_1my__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator nw::graph::edge_range&lt; Graph, Is &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>nw::graph::edge_range::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="165" column="18" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1a7dad413ddd8d3f57ea7a7edb8044dcb7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t nw::graph::edge_range&lt; Graph, Is &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>nw::graph::edge_range::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="167" column="15" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1acaa22d3285a6a194a248392b69db53f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nw::graph::edge_range&lt; Graph, Is &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>nw::graph::edge_range::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="168" column="15" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1edge__range_1a646050d68d2a607e5be376a94bd38d93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nw::graph::edge_range&lt; Graph, Is &gt;::is_divisible</definition>
        <argsstring>() const</argsstring>
        <name>is_divisible</name>
        <qualifiedname>nw::graph::edge_range::is_divisible</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="169" column="15" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="169" bodyend="169"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" line="33" column="1" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/edge_range.hpp" bodystart="33" bodyend="170"/>
    <listofallmembers>
      <member refid="classnw_1_1graph_1_1edge__range_1a1f22ce6dcc85df2cc88a732326bd6b9c" prot="public" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>begin</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1a9562699ec18b26b9753c3045824f3cea" prot="public" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>begin</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1ac2a9b2c97831cffb07551aefa0b36b25" prot="public" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>const_iterator</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1a1839b9107d5349adbf65ad3ea7d7c1b8" prot="private" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>cutoff_</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1a741abc56321790b64beccb4aac6acd30" prot="public" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>edge_range</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1a7c4c579a4b1028c43db6cf81550b5eb2" prot="public" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>edge_range</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1ab354fae805a517bfc344e0c8bcd34b1a" prot="public" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>edge_range</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1aa4f3c734d25c044cd4a4a1fc2f159d6d" prot="public" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>edge_range</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1acaa22d3285a6a194a248392b69db53f5" prot="public" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>empty</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1a129bb8ff8d4ff642cf8179086a065213" prot="public" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>end</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1a793f866768e60af14d9ac693e9f36e5a" prot="public" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>end</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1abe39631f18adce0be446e90a9f456f8a" prot="private" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>graph_inner_iterator</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1a39dc50d78d6bb93c82bd5315f74e529b" prot="private" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>graph_iterator</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1a646050d68d2a607e5be376a94bd38d93" prot="public" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>is_divisible</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1a098b300223e447f9d204a2e46e8d7a1b" prot="public" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>iterator</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1a79b1baa91b649e1432b79792337ceda8" prot="public" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>operator=</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1af5ce9f63f182c48b07f4fd1f2bfcde93" prot="private" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>outer_base_</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1aa27634358f83c7a951021b2efa398aa3" prot="private" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>outer_begin_</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1ac69b3b688e872b5ae87a8b2a01454eaa" prot="private" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>outer_end_</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1a7dad413ddd8d3f57ea7a7edb8044dcb7" prot="public" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>size</name></member>
      <member refid="classnw_1_1graph_1_1edge__range_1afcbef994318fc38592140738a2308ee3" prot="private" virt="non-virtual"><scope>nw::graph::edge_range</scope><name>vertex_id_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
