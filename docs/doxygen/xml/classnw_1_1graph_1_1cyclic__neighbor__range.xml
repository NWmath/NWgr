<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classnw_1_1graph_1_1cyclic__neighbor__range" kind="class" language="C++" prot="public">
    <compoundname>nw::graph::cyclic_neighbor_range</compoundname>
    <includes refid="cyclic__neighbor__range_8hpp" local="no">cyclic_neighbor_range.hpp</includes>
    <innerclass refid="structnw_1_1graph_1_1cyclic__neighbor__range_1_1iterator" prot="public">nw::graph::cyclic_neighbor_range::iterator</innerclass>
    <templateparamlist>
      <param>
        <type>class Iterator</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnw_1_1graph_1_1cyclic__neighbor__range_1a877b4c8e418e25c52f9a25640a9b1015" prot="public" static="no">
        <type>typename std::iterator_traits&lt; Iterator &gt;::difference_type</type>
        <definition>using nw::graph::cyclic_neighbor_range&lt; Iterator &gt;::difference_type =  typename std::iterator_traits&lt;Iterator&gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>nw::graph::cyclic_neighbor_range::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" line="42" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnw_1_1graph_1_1cyclic__neighbor__range_1a3eec66e22e7e8dd2f5e53b81d8d190bc" prot="private" static="no" mutable="no">
        <type>Iterator</type>
        <definition>Iterator nw::graph::cyclic_neighbor_range&lt; Iterator &gt;::begin_</definition>
        <argsstring></argsstring>
        <name>begin_</name>
        <qualifiedname>nw::graph::cyclic_neighbor_range::begin_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" line="45" column="19" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1cyclic__neighbor__range_1a354595003c19054d403df3f46727e580" prot="private" static="no" mutable="no">
        <type>Iterator</type>
        <definition>Iterator nw::graph::cyclic_neighbor_range&lt; Iterator &gt;::end_</definition>
        <argsstring></argsstring>
        <name>end_</name>
        <qualifiedname>nw::graph::cyclic_neighbor_range::end_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" line="46" column="19" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1cyclic__neighbor__range_1a512c90bf58698d2edad2dcfe6af972e1" prot="private" static="no" mutable="no">
        <type>difference_type</type>
        <definition>difference_type nw::graph::cyclic_neighbor_range&lt; Iterator &gt;::cutoff_</definition>
        <argsstring></argsstring>
        <name>cutoff_</name>
        <qualifiedname>nw::graph::cyclic_neighbor_range::cutoff_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" line="47" column="19" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1cyclic__neighbor__range_1ae393ee2d221f9dd1e41575bb5a7c8a49" prot="private" static="no" mutable="no">
        <type>difference_type</type>
        <definition>difference_type nw::graph::cyclic_neighbor_range&lt; Iterator &gt;::cycle_</definition>
        <argsstring></argsstring>
        <name>cycle_</name>
        <qualifiedname>nw::graph::cyclic_neighbor_range::cycle_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" line="48" column="19" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1cyclic__neighbor__range_1af42627c225d0aff6c6def9f0993e20da" prot="private" static="no" mutable="no">
        <type>difference_type</type>
        <definition>difference_type nw::graph::cyclic_neighbor_range&lt; Iterator &gt;::stride_</definition>
        <argsstring></argsstring>
        <name>stride_</name>
        <qualifiedname>nw::graph::cyclic_neighbor_range::stride_</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" line="49" column="19" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__neighbor__range_1a710c77ff0e3bc910a178879f2adea07d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Range</type>
          </param>
          <param>
            <type>class Cutoff</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>nw::graph::cyclic_neighbor_range&lt; Iterator &gt;::cyclic_neighbor_range</definition>
        <argsstring>(Range &amp;&amp;range, Cutoff cutoff)</argsstring>
        <name>cyclic_neighbor_range</name>
        <qualifiedname>nw::graph::cyclic_neighbor_range::cyclic_neighbor_range</qualifiedname>
        <param>
          <type>Range &amp;&amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>Cutoff</type>
          <declname>cutoff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" line="53" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" bodystart="53" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__neighbor__range_1aa61c95704d24c449798e5deac57c3f36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nw::graph::cyclic_neighbor_range&lt; Iterator &gt;::cyclic_neighbor_range</definition>
        <argsstring>(const cyclic_neighbor_range &amp;)=default</argsstring>
        <name>cyclic_neighbor_range</name>
        <qualifiedname>nw::graph::cyclic_neighbor_range::cyclic_neighbor_range</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1cyclic__neighbor__range" kindref="compound">cyclic_neighbor_range</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" line="56" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__neighbor__range_1a471d269f1ba1988cc8888cc0c6dc3a11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nw::graph::cyclic_neighbor_range&lt; Iterator &gt;::cyclic_neighbor_range</definition>
        <argsstring>(cyclic_neighbor_range &amp;&amp;)=default</argsstring>
        <name>cyclic_neighbor_range</name>
        <qualifiedname>nw::graph::cyclic_neighbor_range::cyclic_neighbor_range</qualifiedname>
        <param>
          <type><ref refid="classnw_1_1graph_1_1cyclic__neighbor__range" kindref="compound">cyclic_neighbor_range</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" line="57" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__neighbor__range_1a75e5e0011c3f77a910d2723dfa69973b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nw::graph::cyclic_neighbor_range&lt; Iterator &gt;::cyclic_neighbor_range</definition>
        <argsstring>(cyclic_neighbor_range &amp;rhs, tbb::split)</argsstring>
        <name>cyclic_neighbor_range</name>
        <qualifiedname>nw::graph::cyclic_neighbor_range::cyclic_neighbor_range</qualifiedname>
        <param>
          <type><ref refid="classnw_1_1graph_1_1cyclic__neighbor__range" kindref="compound">cyclic_neighbor_range</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>tbb::split</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" line="59" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" bodystart="59" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__neighbor__range_1a902dd876fb3cae70d4dc48a594369829" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structnw_1_1graph_1_1cyclic__neighbor__range_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator nw::graph::cyclic_neighbor_range&lt; Iterator &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>nw::graph::cyclic_neighbor_range::begin</qualifiedname>
        <briefdescription>
<para>Return an iterator that points to the start of the cycle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" line="78" column="12" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__neighbor__range_1ab31a22b3935e533a2bb1251974047055" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structnw_1_1graph_1_1cyclic__neighbor__range_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator nw::graph::cyclic_neighbor_range&lt; Iterator &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>nw::graph::cyclic_neighbor_range::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an iterator that points to the end of the cycle.</para>
<para>The end of the cycle is the first iterator in the cycle that is greater than or equal to the end_ iterator in the underlying range. End iterators for different cycles will be different even if the underlying range and strides match, so tests should not be performed across cycles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" line="86" column="12" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" bodystart="86" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__neighbor__range_1a6d4f88f551e04ff04becf5a724773a5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>difference_type</type>
        <definition>difference_type nw::graph::cyclic_neighbor_range&lt; Iterator &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>nw::graph::cyclic_neighbor_range::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" line="93" column="19" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" bodystart="93" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__neighbor__range_1a82e8b5db10757028d740273fef5b96ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nw::graph::cyclic_neighbor_range&lt; Iterator &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>nw::graph::cyclic_neighbor_range::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" line="100" column="8" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1cyclic__neighbor__range_1a355f5f6323c4515f330e38790ebd23b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nw::graph::cyclic_neighbor_range&lt; Iterator &gt;::is_divisible</definition>
        <argsstring>() const</argsstring>
        <name>is_divisible</name>
        <qualifiedname>nw::graph::cyclic_neighbor_range::is_divisible</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Runtime check to see if the range is divisible.</para>
<para>The range can be subdivided if its stride can be increased relative to the cutoff. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" line="106" column="8" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" bodystart="106" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The cyclic neighbor range adapter.</para>
<para>This adapter takes an underlying random access range and provides the ability to split the range into cycles for TBB. A cycle is a subset of the range such that each subsequent element is some stride from the previous element.</para>
<para>The cyclic range adapter is implemented recursively, that is that each time the range is split it simply returns two ranges that cover the previous range, each with twice the cycle and one offset by one element.</para>
<para>Key to the adapter is the <emphasis>cutoff</emphasis>, which is defined in terms of the maximum stride rather than in terms of the number of elements. A <emphasis>cutoff</emphasis> of <computeroutput>1</computeroutput> implies that the range can&apos;t be split, while a <computeroutput>_cutoff_</computeroutput> of <computeroutput>n</computeroutput> means that the range can be split into up to <computeroutput>n</computeroutput> cycles.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Iterator</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the underlying range iterator (must be at least random access). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" line="38" column="1" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/cyclic_neighbor_range.hpp" bodystart="38" bodyend="107"/>
    <listofallmembers>
      <member refid="classnw_1_1graph_1_1cyclic__neighbor__range_1a902dd876fb3cae70d4dc48a594369829" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_neighbor_range</scope><name>begin</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__neighbor__range_1a3eec66e22e7e8dd2f5e53b81d8d190bc" prot="private" virt="non-virtual"><scope>nw::graph::cyclic_neighbor_range</scope><name>begin_</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__neighbor__range_1a512c90bf58698d2edad2dcfe6af972e1" prot="private" virt="non-virtual"><scope>nw::graph::cyclic_neighbor_range</scope><name>cutoff_</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__neighbor__range_1ae393ee2d221f9dd1e41575bb5a7c8a49" prot="private" virt="non-virtual"><scope>nw::graph::cyclic_neighbor_range</scope><name>cycle_</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__neighbor__range_1a710c77ff0e3bc910a178879f2adea07d" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_neighbor_range</scope><name>cyclic_neighbor_range</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__neighbor__range_1aa61c95704d24c449798e5deac57c3f36" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_neighbor_range</scope><name>cyclic_neighbor_range</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__neighbor__range_1a471d269f1ba1988cc8888cc0c6dc3a11" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_neighbor_range</scope><name>cyclic_neighbor_range</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__neighbor__range_1a75e5e0011c3f77a910d2723dfa69973b" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_neighbor_range</scope><name>cyclic_neighbor_range</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__neighbor__range_1a877b4c8e418e25c52f9a25640a9b1015" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_neighbor_range</scope><name>difference_type</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__neighbor__range_1a82e8b5db10757028d740273fef5b96ec" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_neighbor_range</scope><name>empty</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__neighbor__range_1ab31a22b3935e533a2bb1251974047055" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_neighbor_range</scope><name>end</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__neighbor__range_1a354595003c19054d403df3f46727e580" prot="private" virt="non-virtual"><scope>nw::graph::cyclic_neighbor_range</scope><name>end_</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__neighbor__range_1a355f5f6323c4515f330e38790ebd23b3" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_neighbor_range</scope><name>is_divisible</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__neighbor__range_1a6d4f88f551e04ff04becf5a724773a5c" prot="public" virt="non-virtual"><scope>nw::graph::cyclic_neighbor_range</scope><name>size</name></member>
      <member refid="classnw_1_1graph_1_1cyclic__neighbor__range_1af42627c225d0aff6c6def9f0993e20da" prot="private" virt="non-virtual"><scope>nw::graph::cyclic_neighbor_range</scope><name>stride_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
