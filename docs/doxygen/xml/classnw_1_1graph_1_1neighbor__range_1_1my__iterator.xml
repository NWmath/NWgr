<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator" kind="class" language="C++" prot="public">
    <compoundname>nw::graph::neighbor_range::my_iterator</compoundname>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>is_const</declname>
        <defname>is_const</defname>
        <defval>false</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a06ff85fe440871688ac0b1bf7ba15ad0" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>using nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::iterator_category =  std::forward_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::iterator_category</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="54" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a13fae91b292f9bfbdb0497218b42e07d" prot="public" static="no">
        <type>std::tuple&lt; vertex_id_type &gt;</type>
        <definition>using nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::value_type =  std::tuple&lt;vertex_id_type&gt;</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="55" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a38162c8ad573aeb25b669cd085ba7291" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::difference_type =  std::size_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="56" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a2f7627c27fbd5a2499ab940c3f9074d6" prot="public" static="no">
        <type>value_type &amp;</type>
        <definition>using nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::reference =  value_type&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="57" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a2eb2ac476eed705883264d0823fd04a5" prot="public" static="no">
        <type>value_type *</type>
        <definition>using nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::pointer =  value_type*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="58" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a162bfeae8495214eb70e9de245547e42" prot="private" static="no" mutable="no">
        <type>graph_iterator</type>
        <definition>graph_iterator nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::base_</definition>
        <argsstring></argsstring>
        <name>base_</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::base_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="61" column="20" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1ad4d4764dd16bf46ed059d58c43e7a08d" prot="private" static="no" mutable="no">
        <type>graph_iterator</type>
        <definition>graph_iterator nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::first_</definition>
        <argsstring></argsstring>
        <name>first_</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::first_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="62" column="20" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1aa9661af092cf13520a5852728c26184e" prot="private" static="no" mutable="no">
        <type>graph_iterator</type>
        <definition>graph_iterator nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::last_</definition>
        <argsstring></argsstring>
        <name>last_</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::last_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="63" column="20" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1ae701c34032b2fb4fa55843ce920363e9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::my_iterator</definition>
        <argsstring>(const my_iterator &amp;b, unsigned long step)</argsstring>
        <name>my_iterator</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::my_iterator</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="65" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="65" bodyend="65"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1adbf4ac6351d180e2e8f2eaa56aaa3b4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::my_iterator</definition>
        <argsstring>(graph_iterator base, graph_iterator begin, graph_iterator end)</argsstring>
        <name>my_iterator</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::my_iterator</qualifiedname>
        <param>
          <type>graph_iterator</type>
          <declname>base</declname>
        </param>
        <param>
          <type>graph_iterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>graph_iterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="68" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1ae5e7927653be70bccb2b406ef975d5e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::my_iterator</definition>
        <argsstring>(const my_iterator &amp;)=default</argsstring>
        <name>my_iterator</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::my_iterator</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="70" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a77bffeef5c0e9d6ec481b312d22202a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
        <definition>my_iterator &amp; nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator=</definition>
        <argsstring>(const my_iterator &amp;b)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="71" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a21cc204f4eee2856aac959c0b3411166" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>was_const</declname>
            <defname>was_const</defname>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;is_const &amp;&amp; !was_const&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::my_iterator</definition>
        <argsstring>(const my_iterator&lt; was_const &gt; &amp;rhs)</argsstring>
        <name>my_iterator</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::my_iterator</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator" kindref="compound">my_iterator</ref>&lt; was_const &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="74" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a34430ff2cedf4547d221c5260d4652fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>was_const</declname>
            <defname>was_const</defname>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;is_const &amp;&amp; !was_const&gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
        <definition>my_iterator &amp; nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator=</definition>
        <argsstring>(const my_iterator&lt; was_const &gt; &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator" kindref="compound">my_iterator</ref>&lt; was_const &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="77" column="17" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a14657e8eedfbbf26834dcba44d2ab150" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
        <definition>my_iterator &amp; nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="84" column="17" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a396735449733af5bb4c7adec83c30f13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::operator*</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="91" column="10" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a14b33687cfcaa6d6cdf63d92b1c08e2a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::operator*</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="92" column="10" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a0f549efe59ca09a804697eee6c6dacf4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator==</definition>
        <argsstring>(const my_iterator &amp;b) const</argsstring>
        <name>operator==</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="94" column="10" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1ae6fc3b1c4e83d6b00082b070dc2f11dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator!=</definition>
        <argsstring>(const my_iterator &amp;b) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="95" column="10" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a89cb5b0c205c713ed1cc1009fb7cad38" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator&lt;</definition>
        <argsstring>(const my_iterator &amp;b) const</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="96" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a5de61db9f639cfda78c716ab8d5942e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>difference_type</type>
        <definition>difference_type nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator-</definition>
        <argsstring>(const my_iterator &amp;b) const</argsstring>
        <name>operator-</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::operator-</qualifiedname>
        <param>
          <type>const <ref refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator" kindref="compound">my_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="98" column="21" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a89a64b1e8f8cbb97af5ba93003618a24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator" kindref="compound">my_iterator</ref></type>
        <definition>my_iterator nw::graph::neighbor_range&lt; Graph, Is &gt;::my_iterator&lt; is_const &gt;::operator+</definition>
        <argsstring>(difference_type step) const</argsstring>
        <name>operator+</name>
        <qualifiedname>nw::graph::neighbor_range::my_iterator::operator+</qualifiedname>
        <param>
          <type>difference_type</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="99" column="21" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="99" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" line="52" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/adaptors/neighbor_range.hpp" bodystart="52" bodyend="100"/>
    <listofallmembers>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a162bfeae8495214eb70e9de245547e42" prot="private" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>base_</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a38162c8ad573aeb25b669cd085ba7291" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>difference_type</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1ad4d4764dd16bf46ed059d58c43e7a08d" prot="private" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>first_</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a06ff85fe440871688ac0b1bf7ba15ad0" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>iterator_category</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1aa9661af092cf13520a5852728c26184e" prot="private" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>last_</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1ae701c34032b2fb4fa55843ce920363e9" prot="private" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>my_iterator</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1adbf4ac6351d180e2e8f2eaa56aaa3b4e" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>my_iterator</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1ae5e7927653be70bccb2b406ef975d5e2" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>my_iterator</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a21cc204f4eee2856aac959c0b3411166" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>my_iterator</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1ae6fc3b1c4e83d6b00082b070dc2f11dc" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>operator!=</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a396735449733af5bb4c7adec83c30f13" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>operator*</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a14b33687cfcaa6d6cdf63d92b1c08e2a" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>operator*</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a89a64b1e8f8cbb97af5ba93003618a24" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>operator+</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a14657e8eedfbbf26834dcba44d2ab150" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>operator++</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a5de61db9f639cfda78c716ab8d5942e8" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>operator-</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a89cb5b0c205c713ed1cc1009fb7cad38" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>operator&lt;</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a77bffeef5c0e9d6ec481b312d22202a8" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>operator=</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a34430ff2cedf4547d221c5260d4652fc" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>operator=</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a0f549efe59ca09a804697eee6c6dacf4" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>operator==</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a2eb2ac476eed705883264d0823fd04a5" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>pointer</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a2f7627c27fbd5a2499ab940c3f9074d6" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>reference</name></member>
      <member refid="classnw_1_1graph_1_1neighbor__range_1_1my__iterator_1a13fae91b292f9bfbdb0497218b42e07d" prot="public" virt="non-virtual"><scope>nw::graph::neighbor_range::my_iterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
