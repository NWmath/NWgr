<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structnw_1_1graph_1_1zipped" kind="struct" language="C++" prot="public">
    <compoundname>nw::graph::zipped</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::tuple&lt; Ranges &amp;... &gt;</basecompoundref>
    <innerclass refid="classnw_1_1graph_1_1zipped_1_1soa__iterator" prot="public">nw::graph::zipped::soa_iterator</innerclass>
    <templateparamlist>
      <param>
        <type>std::ranges::random_access_range...</type>
        <declname>Ranges</declname>
        <defname>Ranges</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structnw_1_1graph_1_1zipped_1af33883ef9de74c22e729157a0e29045e" prot="public" static="no">
        <type>std::tuple&lt; Ranges &amp;... &gt;</type>
        <definition>using nw::graph::zipped&lt; Ranges &gt;::storage_type =  std::tuple&lt;Ranges&amp;...&gt;</definition>
        <argsstring></argsstring>
        <name>storage_type</name>
        <qualifiedname>nw::graph::zipped::storage_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="54" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structnw_1_1graph_1_1zipped_1ac59097b72ee524e3b76e97dcb8e4db49" prot="public" static="no">
        <type>std::tuple&lt; Ranges &amp;... &gt;</type>
        <definition>using nw::graph::zipped&lt; Ranges &gt;::base =  std::tuple&lt;Ranges&amp;...&gt;</definition>
        <argsstring></argsstring>
        <name>base</name>
        <qualifiedname>nw::graph::zipped::base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="55" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structnw_1_1graph_1_1zipped_1a2a49ce18ca129aef065cff329ab090d2" prot="public" static="no">
        <type>std::tuple&lt; std::ranges::range_value_t&lt; Ranges &gt;... &gt;</type>
        <definition>using nw::graph::zipped&lt; Ranges &gt;::attributes_t =  std::tuple&lt;std::ranges::range_value_t&lt;Ranges&gt;...&gt;</definition>
        <argsstring></argsstring>
        <name>attributes_t</name>
        <qualifiedname>nw::graph::zipped::attributes_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="57" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structnw_1_1graph_1_1zipped_1a19ef6b29f7558d70c2afab9c6b4c7b9a" prot="public" static="no">
        <type>std::tuple&lt; const std::ranges::range_value_t&lt; Ranges &gt;... &gt;</type>
        <definition>using nw::graph::zipped&lt; Ranges &gt;::const_attributes_t =  std::tuple&lt;const std::ranges::range_value_t&lt;Ranges&gt;...&gt;</definition>
        <argsstring></argsstring>
        <name>const_attributes_t</name>
        <qualifiedname>nw::graph::zipped::const_attributes_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="58" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structnw_1_1graph_1_1zipped_1a483fc58b94ea2e8035c12a37545226ac" prot="public" static="no">
        <type>std::tuple&lt; std::ranges::range_reference_t&lt; Ranges &gt;... &gt;</type>
        <definition>using nw::graph::zipped&lt; Ranges &gt;::attributes_r =  std::tuple&lt;std::ranges::range_reference_t&lt;Ranges&gt;...&gt;</definition>
        <argsstring></argsstring>
        <name>attributes_r</name>
        <qualifiedname>nw::graph::zipped::attributes_r</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="59" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structnw_1_1graph_1_1zipped_1a882aa3c214731dacd43a56581ad9d7bd" prot="public" static="no">
        <type>std::tuple&lt; const std::ranges::range_reference_t&lt; Ranges &gt;... &gt;</type>
        <definition>using nw::graph::zipped&lt; Ranges &gt;::const_attributes_r =  std::tuple&lt;const std::ranges::range_reference_t&lt;Ranges&gt;...&gt;</definition>
        <argsstring></argsstring>
        <name>const_attributes_r</name>
        <qualifiedname>nw::graph::zipped::const_attributes_r</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="60" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structnw_1_1graph_1_1zipped_1a0b347f3fa6d79deb9ec846e3762536a8" prot="public" static="no">
        <type><ref refid="classnw_1_1graph_1_1zipped_1_1soa__iterator" kindref="compound">soa_iterator</ref>&lt; false &gt;</type>
        <definition>using nw::graph::zipped&lt; Ranges &gt;::iterator =  soa_iterator&lt;false&gt;</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <qualifiedname>nw::graph::zipped::iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="142" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structnw_1_1graph_1_1zipped_1a09f8e65e2a6cd8028f7a74745999af16" prot="public" static="no">
        <type>typename iterator::value_type</type>
        <definition>using nw::graph::zipped&lt; Ranges &gt;::value_type =  typename iterator::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>nw::graph::zipped::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="144" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structnw_1_1graph_1_1zipped_1ad090f8a97ebad41c6eb30eae5a9985e4" prot="public" static="no">
        <type>typename iterator::reference</type>
        <definition>using nw::graph::zipped&lt; Ranges &gt;::reference =  typename iterator::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <qualifiedname>nw::graph::zipped::reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="145" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structnw_1_1graph_1_1zipped_1a121ad503b579659367252b94b8197e14" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using nw::graph::zipped&lt; Ranges &gt;::size_type =  std::size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>nw::graph::zipped::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="146" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structnw_1_1graph_1_1zipped_1a11ac6e1ccc4cb062e4c790b305bd0ecc" prot="public" static="no">
        <type>typename iterator::difference_type</type>
        <definition>using nw::graph::zipped&lt; Ranges &gt;::difference_type =  typename iterator::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>nw::graph::zipped::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="147" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structnw_1_1graph_1_1zipped_1ae86664147a1d91f7b40aaa9fa7737572" prot="public" static="no">
        <type>typename <ref refid="structnw_1_1graph_1_1arrow__proxy" kindref="compound">iterator::pointer</ref></type>
        <definition>using nw::graph::zipped&lt; Ranges &gt;::pointer =  typename iterator::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <qualifiedname>nw::graph::zipped::pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="148" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structnw_1_1graph_1_1zipped_1a9faabdd5190959952ffd08f6c0eb3a44" prot="public" static="no">
        <type><ref refid="classnw_1_1graph_1_1zipped_1_1soa__iterator" kindref="compound">soa_iterator</ref>&lt; true &gt;</type>
        <definition>using nw::graph::zipped&lt; Ranges &gt;::const_iterator =  soa_iterator&lt;true&gt;</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <qualifiedname>nw::graph::zipped::const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="150" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structnw_1_1graph_1_1zipped_1a4f4f52b6e126ca22b5836887198f1f5a" prot="public" static="no">
        <type>typename const_iterator::reference</type>
        <definition>using nw::graph::zipped&lt; Ranges &gt;::const_reference =  typename const_iterator::reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <qualifiedname>nw::graph::zipped::const_reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="151" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structnw_1_1graph_1_1zipped_1a058f665becc8162b961c73e3daf5b6bb" prot="public" static="no">
        <type>typename <ref refid="structnw_1_1graph_1_1arrow__proxy" kindref="compound">const_iterator::pointer</ref></type>
        <definition>using nw::graph::zipped&lt; Ranges &gt;::const_pointer =  typename const_iterator::pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <qualifiedname>nw::graph::zipped::const_pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="152" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structnw_1_1graph_1_1zipped_1a9220f2215ca82235fd34bb04f00a7f68" prot="public" static="no">
        <type>std::reverse_iterator&lt; <ref refid="classnw_1_1graph_1_1zipped_1_1soa__iterator" kindref="compound">iterator</ref> &gt;</type>
        <definition>using nw::graph::zipped&lt; Ranges &gt;::reverse_iterator =  std::reverse_iterator&lt;iterator&gt;</definition>
        <argsstring></argsstring>
        <name>reverse_iterator</name>
        <qualifiedname>nw::graph::zipped::reverse_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="154" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structnw_1_1graph_1_1zipped_1a9da05515ba38fc36d2e9450752e2c15e" prot="public" static="no">
        <type>std::reverse_iterator&lt; <ref refid="classnw_1_1graph_1_1zipped_1_1soa__iterator" kindref="compound">const_iterator</ref> &gt;</type>
        <definition>using nw::graph::zipped&lt; Ranges &gt;::const_reverse_iterator =  std::reverse_iterator&lt;const_iterator&gt;</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <qualifiedname>nw::graph::zipped::const_reverse_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="155" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1a832333d9370190d05459fcff00fc0a50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nw::graph::zipped&lt; Ranges &gt;::zipped</definition>
        <argsstring>(Ranges &amp;... rs)</argsstring>
        <name>zipped</name>
        <qualifiedname>nw::graph::zipped::zipped</qualifiedname>
        <param>
          <type>Ranges &amp;...</type>
          <declname>rs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="165" column="3" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1a35bc3cb4b4ee6222bf109e95784f2938" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1zipped_1_1soa__iterator" kindref="compound">iterator</ref></type>
        <definition>iterator nw::graph::zipped&lt; Ranges &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>nw::graph::zipped::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="167" column="18" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1a4017c99db214ab1f415d28b3cbc05c24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1zipped_1_1soa__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator nw::graph::zipped&lt; Ranges &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>nw::graph::zipped::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="168" column="18" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1a6a4d993a3ed3add05d0dbcf946f7565e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1zipped_1_1soa__iterator" kindref="compound">iterator</ref></type>
        <definition>iterator nw::graph::zipped&lt; Ranges &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>nw::graph::zipped::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="170" column="12" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1a3d70253c48bcabbec6289ed58c1b6f86" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnw_1_1graph_1_1zipped_1_1soa__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator nw::graph::zipped&lt; Ranges &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>nw::graph::zipped::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="172" column="18" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1a76aa1fcd07f1c5be01242a1563890ef0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference nw::graph::zipped&lt; Ranges &gt;::operator[]</definition>
        <argsstring>(std::size_t i)</argsstring>
        <name>operator[]</name>
        <qualifiedname>nw::graph::zipped::operator[]</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="174" column="13" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1a99bc3dc43baa1c9a71fe4ab506cb6bc5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_reference</type>
        <definition>const_reference nw::graph::zipped&lt; Ranges &gt;::operator[]</definition>
        <argsstring>(std::size_t i) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>nw::graph::zipped::operator[]</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="178" column="19" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1a54bcf488a45e1e3a4bf4bef6cb24ef25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nw::graph::zipped&lt; Ranges &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>nw::graph::zipped::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="201" column="8" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="201" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1afeda8606ecd1823497528d83bb01f538" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nw::graph::zipped&lt; Ranges &gt;::resize</definition>
        <argsstring>(size_t N)</argsstring>
        <name>resize</name>
        <qualifiedname>nw::graph::zipped::resize</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="205" column="8" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="205" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1a74a4ddeb9eb84f3e9b8fa2ec518a88fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nw::graph::zipped&lt; Ranges &gt;::reserve</definition>
        <argsstring>(size_t N)</argsstring>
        <name>reserve</name>
        <qualifiedname>nw::graph::zipped::reserve</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="209" column="8" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="209" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1a0d5b89e2c2ab850fb6327f2b034a1a49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nw::graph::zipped&lt; Ranges &gt;::serialize</definition>
        <argsstring>(std::ostream &amp;outfile, const T &amp;vs) const</argsstring>
        <name>serialize</name>
        <qualifiedname>nw::graph::zipped::serialize</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>outfile</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>vs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="214" column="8" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="214" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1ae5872c4ddaa817f3968a48ecb4a8935a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nw::graph::zipped&lt; Ranges &gt;::deserialize</definition>
        <argsstring>(std::istream &amp;infile, T &amp;vs)</argsstring>
        <name>deserialize</name>
        <qualifiedname>nw::graph::zipped::deserialize</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>infile</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>vs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="223" column="8" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="223" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1a2d6b357d9b98b67b5ab6a49e0243ff5e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nw::graph::zipped&lt; Ranges &gt;::serialize</definition>
        <argsstring>(std::ostream &amp;outfile) const</argsstring>
        <name>serialize</name>
        <qualifiedname>nw::graph::zipped::serialize</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>outfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="231" column="8" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="231" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1ada13effd9d358006976efa0f21e9c9ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nw::graph::zipped&lt; Ranges &gt;::deserialize</definition>
        <argsstring>(std::istream &amp;infile)</argsstring>
        <name>deserialize</name>
        <qualifiedname>nw::graph::zipped::deserialize</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>infile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="239" column="8" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="239" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1af5ddd71eb46ef73f3c88f71148480216" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename index_t</type>
          </param>
          <param>
            <type>typename vertex_id_type</type>
          </param>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class ExecutionPolicy</type>
            <defval>std::execution::parallel_unsequenced_policy</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nw::graph::zipped&lt; Ranges &gt;::permute</definition>
        <argsstring>(const std::vector&lt; index_t &gt; &amp;indices, const std::vector&lt; index_t &gt; &amp;new_indices, const std::vector&lt; vertex_id_type &gt; &amp;perm, T &amp;vs, ExecutionPolicy &amp;&amp;ex_policy={})</argsstring>
        <name>permute</name>
        <qualifiedname>nw::graph::zipped::permute</qualifiedname>
        <param>
          <type>const std::vector&lt; index_t &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const std::vector&lt; index_t &gt; &amp;</type>
          <declname>new_indices</declname>
        </param>
        <param>
          <type>const std::vector&lt; vertex_id_type &gt; &amp;</type>
          <declname>perm</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>vs</declname>
        </param>
        <param>
          <type>ExecutionPolicy &amp;&amp;</type>
          <declname>ex_policy</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="249" column="8" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="249" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1ad945517255672f49a93f5b15ce12101f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename index_t</type>
          </param>
          <param>
            <type>typename vertex_id_type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nw::graph::zipped&lt; Ranges &gt;::permute</definition>
        <argsstring>(const std::vector&lt; index_t &gt; &amp;indices, const std::vector&lt; index_t &gt; &amp;new_indices, const std::vector&lt; vertex_id_type &gt; &amp;perm)</argsstring>
        <name>permute</name>
        <qualifiedname>nw::graph::zipped::permute</qualifiedname>
        <param>
          <type>const std::vector&lt; index_t &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const std::vector&lt; index_t &gt; &amp;</type>
          <declname>new_indices</declname>
        </param>
        <param>
          <type>const std::vector&lt; vertex_id_type &gt; &amp;</type>
          <declname>perm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="260" column="8" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1a0f9c383dc9275ad7759c738611bf5682" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t nw::graph::zipped&lt; Ranges &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>nw::graph::zipped::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="264" column="10" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="264" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1acfaf5bf42af447899ddd2d770da93ec0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nw::graph::zipped&lt; Ranges &gt;::operator==</definition>
        <argsstring>(zipped &amp;a)</argsstring>
        <name>operator==</name>
        <qualifiedname>nw::graph::zipped::operator==</qualifiedname>
        <param>
          <type><ref refid="structnw_1_1graph_1_1zipped" kindref="compound">zipped</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="266" column="8" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="266" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="structnw_1_1graph_1_1zipped_1ad811217fd766a555ded5107e1bd60f87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nw::graph::zipped&lt; Ranges &gt;::operator!=</definition>
        <argsstring>(const storage_type &amp;a)</argsstring>
        <name>operator!=</name>
        <qualifiedname>nw::graph::zipped::operator!=</qualifiedname>
        <param>
          <type>const storage_type &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="268" column="8" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="268" bodyend="268"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nw::graph::zipped&lt; Ranges &gt;</label>
        <link refid="structnw_1_1graph_1_1zipped"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::tuple&lt; Ranges &amp;... &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nw::graph::zipped&lt; Ranges &gt;</label>
        <link refid="structnw_1_1graph_1_1zipped"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::tuple&lt; Ranges &amp;... &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" line="53" column="1" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp" bodystart="53" bodyend="269"/>
    <listofallmembers>
      <member refid="structnw_1_1graph_1_1zipped_1a483fc58b94ea2e8035c12a37545226ac" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>attributes_r</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a2a49ce18ca129aef065cff329ab090d2" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>attributes_t</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1ac59097b72ee524e3b76e97dcb8e4db49" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>base</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a35bc3cb4b4ee6222bf109e95784f2938" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>begin</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a4017c99db214ab1f415d28b3cbc05c24" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>begin</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a54bcf488a45e1e3a4bf4bef6cb24ef25" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>clear</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a882aa3c214731dacd43a56581ad9d7bd" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>const_attributes_r</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a19ef6b29f7558d70c2afab9c6b4c7b9a" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>const_attributes_t</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a9faabdd5190959952ffd08f6c0eb3a44" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>const_iterator</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a058f665becc8162b961c73e3daf5b6bb" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>const_pointer</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a4f4f52b6e126ca22b5836887198f1f5a" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>const_reference</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a9da05515ba38fc36d2e9450752e2c15e" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>const_reverse_iterator</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1ae5872c4ddaa817f3968a48ecb4a8935a" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>deserialize</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1ada13effd9d358006976efa0f21e9c9ab" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>deserialize</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a11ac6e1ccc4cb062e4c790b305bd0ecc" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>difference_type</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a6a4d993a3ed3add05d0dbcf946f7565e" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>end</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a3d70253c48bcabbec6289ed58c1b6f86" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>end</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a0b347f3fa6d79deb9ec846e3762536a8" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>iterator</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1ad811217fd766a555ded5107e1bd60f87" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>operator!=</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1acfaf5bf42af447899ddd2d770da93ec0" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>operator==</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a76aa1fcd07f1c5be01242a1563890ef0" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>operator[]</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a99bc3dc43baa1c9a71fe4ab506cb6bc5" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>operator[]</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1af5ddd71eb46ef73f3c88f71148480216" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>permute</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1ad945517255672f49a93f5b15ce12101f" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>permute</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1ae86664147a1d91f7b40aaa9fa7737572" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>pointer</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1ad090f8a97ebad41c6eb30eae5a9985e4" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>reference</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a74a4ddeb9eb84f3e9b8fa2ec518a88fb" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>reserve</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1afeda8606ecd1823497528d83bb01f538" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>resize</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a9220f2215ca82235fd34bb04f00a7f68" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>reverse_iterator</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a0d5b89e2c2ab850fb6327f2b034a1a49" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>serialize</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a2d6b357d9b98b67b5ab6a49e0243ff5e" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>serialize</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a0f9c383dc9275ad7759c738611bf5682" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>size</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a121ad503b579659367252b94b8197e14" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>size_type</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1af33883ef9de74c22e729157a0e29045e" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>storage_type</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a09f8e65e2a6cd8028f7a74745999af16" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>value_type</name></member>
      <member refid="structnw_1_1graph_1_1zipped_1a832333d9370190d05459fcff00fc0a50" prot="public" virt="non-virtual"><scope>nw::graph::zipped</scope><name>zipped</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
