<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="mmio__nist_8h" kind="file" language="C++">
    <compoundname>mmio_nist.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">ctype.h</includes>
    <includedby refid="_matrix_market_file_8hpp" local="yes">/Users/lums/NWmath/NWgr/include/nwgraph/io/MatrixMarketFile.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h</label>
        <link refid="mmio__nist_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ctype.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/io/MatrixMarketFile.hpp</label>
        <link refid="_matrix_market_file_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio.hpp</label>
        <link refid="mmio_8hpp_source"/>
      </node>
      <node id="1">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h</label>
        <link refid="mmio__nist_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="mmio__nist_8h_1a338442ee1967d47ab7f2e4c3cccf75dd" prot="public" static="no">
        <name>MM_MAX_LINE_LENGTH</name>
        <initializer>1025</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="17" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1af63c90afdcf0c7bb538ef8963b0385d9" prot="public" static="no">
        <name>MatrixMarketBanner</name>
        <initializer>&quot;%%MatrixMarket&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="18" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a532f9540afd8f387f6f846714ecd4d36" prot="public" static="no">
        <name>MM_MAX_TOKEN_LENGTH</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="19" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a39b0b604a9348b9f662a0587a0c29911" prot="public" static="no">
        <name>mm_is_matrix</name>
        <param><defname>typecode</defname></param>
        <initializer>((typecode)[0]==&apos;M&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="26" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1aee7772c709001e294bd67e6fd8382dc3" prot="public" static="no">
        <name>mm_is_sparse</name>
        <param><defname>typecode</defname></param>
        <initializer>((typecode)[1]==&apos;C&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="28" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a922acd6ee972f16bae8349729bd22d28" prot="public" static="no">
        <name>mm_is_coordinate</name>
        <param><defname>typecode</defname></param>
        <initializer>((typecode)[1]==&apos;C&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="29" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a0839683fb6e8a9ce931aec600871f8f8" prot="public" static="no">
        <name>mm_is_dense</name>
        <param><defname>typecode</defname></param>
        <initializer>((typecode)[1]==&apos;A&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="30" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a74c82110c8610df75aad31ee0e57bc8c" prot="public" static="no">
        <name>mm_is_array</name>
        <param><defname>typecode</defname></param>
        <initializer>((typecode)[1]==&apos;A&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="31" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a099de03c35a8b30cf035c46b5349e48b" prot="public" static="no">
        <name>mm_is_complex</name>
        <param><defname>typecode</defname></param>
        <initializer>((typecode)[2]==&apos;C&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="33" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a6afdb9ff27a7a940a7e6538c961d2b72" prot="public" static="no">
        <name>mm_is_real</name>
        <param><defname>typecode</defname></param>
        <initializer>((typecode)[2]==&apos;R&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="34" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1aa105a83b200825c5c9c8e5d44b905187" prot="public" static="no">
        <name>mm_is_pattern</name>
        <param><defname>typecode</defname></param>
        <initializer>((typecode)[2]==&apos;P&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="35" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1ad405f8a31e4f487e04269e372def0071" prot="public" static="no">
        <name>mm_is_integer</name>
        <param><defname>typecode</defname></param>
        <initializer>((typecode)[2]==&apos;I&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="36" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1ae3eab2d2f506a37bc1cda68b21bce9c4" prot="public" static="no">
        <name>mm_is_symmetric</name>
        <param><defname>typecode</defname></param>
        <initializer>((typecode)[3]==&apos;S&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="38" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1aadc12b70af792b1b5c820267396342ce" prot="public" static="no">
        <name>mm_is_general</name>
        <param><defname>typecode</defname></param>
        <initializer>((typecode)[3]==&apos;G&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="39" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a714cfbd11fe0bcdd72ec7eac5ef27a73" prot="public" static="no">
        <name>mm_is_skew</name>
        <param><defname>typecode</defname></param>
        <initializer>((typecode)[3]==&apos;K&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="40" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a409f46e8143876e3b6681728318d866f" prot="public" static="no">
        <name>mm_is_hermitian</name>
        <param><defname>typecode</defname></param>
        <initializer>((typecode)[3]==&apos;H&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="41" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1ab94a2a33e79dda9a50645718c3055bde" prot="public" static="no">
        <name>mm_set_matrix</name>
        <param><defname>typecode</defname></param>
        <initializer>((*typecode)[0]=&apos;M&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="55" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a60425fdf2040cff47da380e2904af1e2" prot="public" static="no">
        <name>mm_set_coordinate</name>
        <param><defname>typecode</defname></param>
        <initializer>((*typecode)[1]=&apos;C&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="56" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a2234ddc053712126166ca92e590fa2bf" prot="public" static="no">
        <name>mm_set_array</name>
        <param><defname>typecode</defname></param>
        <initializer>((*typecode)[1]=&apos;A&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="57" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1abba2bdfdc6f133207b52e70b31f07534" prot="public" static="no">
        <name>mm_set_dense</name>
        <param><defname>typecode</defname></param>
        <initializer>mm_set_array(typecode)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="58" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a38129ce74fa250f778730f1344135c16" prot="public" static="no">
        <name>mm_set_sparse</name>
        <param><defname>typecode</defname></param>
        <initializer>mm_set_coordinate(typecode)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="59" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a1d2710c2c5c84322c5ebad36811c0636" prot="public" static="no">
        <name>mm_set_complex</name>
        <param><defname>typecode</defname></param>
        <initializer>((*typecode)[2]=&apos;C&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="61" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1aef12252aecf7a4af6baa752dc9d29698" prot="public" static="no">
        <name>mm_set_real</name>
        <param><defname>typecode</defname></param>
        <initializer>((*typecode)[2]=&apos;R&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="62" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1ac9bdbe4b4fb164f60460b56c815902c4" prot="public" static="no">
        <name>mm_set_pattern</name>
        <param><defname>typecode</defname></param>
        <initializer>((*typecode)[2]=&apos;P&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="63" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a88726ec878ed03d713d9cf1519ac822d" prot="public" static="no">
        <name>mm_set_integer</name>
        <param><defname>typecode</defname></param>
        <initializer>((*typecode)[2]=&apos;I&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="64" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a5b5292978fc119acc10444b282fe994c" prot="public" static="no">
        <name>mm_set_symmetric</name>
        <param><defname>typecode</defname></param>
        <initializer>((*typecode)[3]=&apos;S&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="67" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a244392516ea33cb49f27d53d36c71d4a" prot="public" static="no">
        <name>mm_set_general</name>
        <param><defname>typecode</defname></param>
        <initializer>((*typecode)[3]=&apos;G&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="68" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a355520c4b7b525bd79972117368967b1" prot="public" static="no">
        <name>mm_set_skew</name>
        <param><defname>typecode</defname></param>
        <initializer>((*typecode)[3]=&apos;K&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="69" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a1df99ff9edf59d44b3866633ee98dbdf" prot="public" static="no">
        <name>mm_set_hermitian</name>
        <param><defname>typecode</defname></param>
        <initializer>((*typecode)[3]=&apos;H&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="70" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a4d63d071fcfb7c11c77ced59b38b2b38" prot="public" static="no">
        <name>mm_clear_typecode</name>
        <param><defname>typecode</defname></param>
        <initializer>									((*typecode)[0]=(*typecode)[1]= \
									(*typecode)[2]=&apos; &apos;,(*typecode)[3]=&apos;G&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="72" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a61be6348c808d02530d151e59f0b456f" prot="public" static="no">
        <name>mm_initialize_typecode</name>
        <param><defname>typecode</defname></param>
        <initializer>mm_clear_typecode(typecode)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="75" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a1e36f866ae2805a8b1a6fb626863decc" prot="public" static="no">
        <name>MM_COULD_NOT_READ_FILE</name>
        <initializer>11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="81" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a35f109af00ebbbd4d008f8fcbc8ed9c1" prot="public" static="no">
        <name>MM_PREMATURE_EOF</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="82" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1add74a290ac25b62447f27f5faed05f5d" prot="public" static="no">
        <name>MM_NOT_MTX</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="83" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a92a9e51b7e612248c29398422613c83d" prot="public" static="no">
        <name>MM_NO_HEADER</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="84" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a7c4977adc296451d59e66972fd4e58db" prot="public" static="no">
        <name>MM_UNSUPPORTED_TYPE</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="85" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a8397a5d870f5a9827caa1c4b766de609" prot="public" static="no">
        <name>MM_LINE_TOO_LONG</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="86" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmio__nist_8h_1a823b41c658a5cbedb8e724fb3b9fe79e" prot="public" static="no">
        <name>MM_COULD_NOT_WRITE_FILE</name>
        <initializer>17</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="87" column="9" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="mmio__nist_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" prot="public" static="no">
        <type>char</type>
        <definition>typedef char MM_typecode[4]</definition>
        <argsstring>[4]</argsstring>
        <name>MM_typecode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="21" column="14" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="mmio__nist_8h_1a1717fdc1d7fdee1a533394877215a969" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char MM_MTX_STR[]</definition>
        <argsstring>[]</argsstring>
        <name>MM_MTX_STR</name>
        <initializer>= &quot;matrix&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="106" column="6" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mmio__nist_8h_1afd35be7e442a6718f607bae48acfdf7e" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char MM_ARRAY_STR[]</definition>
        <argsstring>[]</argsstring>
        <name>MM_ARRAY_STR</name>
        <initializer>= &quot;array&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="107" column="6" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mmio__nist_8h_1a38a76e271c9b5be8c073b8d9dd24ad6f" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char MM_DENSE_STR[]</definition>
        <argsstring>[]</argsstring>
        <name>MM_DENSE_STR</name>
        <initializer>= &quot;array&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="108" column="6" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mmio__nist_8h_1a655336c9b05e0e7e4ed3f6c312f0d730" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char MM_COORDINATE_STR[]</definition>
        <argsstring>[]</argsstring>
        <name>MM_COORDINATE_STR</name>
        <initializer>= &quot;coordinate&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="109" column="6" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mmio__nist_8h_1ae10857eb799d710d1c06e3eeac9f0311" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char MM_SPARSE_STR[]</definition>
        <argsstring>[]</argsstring>
        <name>MM_SPARSE_STR</name>
        <initializer>= &quot;coordinate&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="110" column="6" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mmio__nist_8h_1aba5b8473ca88dace0f4365bab7d88910" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char MM_COMPLEX_STR[]</definition>
        <argsstring>[]</argsstring>
        <name>MM_COMPLEX_STR</name>
        <initializer>= &quot;complex&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="111" column="6" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mmio__nist_8h_1a89d0a9f3469cfaa96eb4bdc26a28b999" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char MM_REAL_STR[]</definition>
        <argsstring>[]</argsstring>
        <name>MM_REAL_STR</name>
        <initializer>= &quot;real&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="112" column="6" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mmio__nist_8h_1a5f6d0a837ea8c740e8a234eb7f1fd994" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char MM_INT_STR[]</definition>
        <argsstring>[]</argsstring>
        <name>MM_INT_STR</name>
        <initializer>= &quot;integer&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="113" column="6" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mmio__nist_8h_1af089e501e297b43b22ff2680bf12c608" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char MM_GENERAL_STR[]</definition>
        <argsstring>[]</argsstring>
        <name>MM_GENERAL_STR</name>
        <initializer>= &quot;general&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="114" column="6" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mmio__nist_8h_1ad8b73e630cabff9c742d8605c3146efc" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char MM_SYMM_STR[]</definition>
        <argsstring>[]</argsstring>
        <name>MM_SYMM_STR</name>
        <initializer>= &quot;symmetric&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="115" column="6" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mmio__nist_8h_1a4dafcb22ea50cf414f6d559c2bf647f8" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char MM_HERM_STR[]</definition>
        <argsstring>[]</argsstring>
        <name>MM_HERM_STR</name>
        <initializer>= &quot;hermitian&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="116" column="6" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mmio__nist_8h_1a75c9a9bb50e629d0e8f351c4b505a623" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char MM_SKEW_STR[]</definition>
        <argsstring>[]</argsstring>
        <name>MM_SKEW_STR</name>
        <initializer>= &quot;skew-symmetric&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="117" column="6" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mmio__nist_8h_1aba9eec28de7293cdd14c256c38cd4685" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char MM_PATTERN_STR[]</definition>
        <argsstring>[]</argsstring>
        <name>MM_PATTERN_STR</name>
        <initializer>= &quot;pattern&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="118" column="6" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="mmio__nist_8h_1aa1015f3b0282e7ef7ef3448fca37958d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mm_is_valid</definition>
        <argsstring>(MM_typecode matcode)</argsstring>
        <name>mm_is_valid</name>
        <param>
          <type>MM_typecode</type>
          <declname>matcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="43" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="43" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="mmio__nist_8h_1aa60179f0306eeb5130c925f5ec8f7a0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * mm_strdup</definition>
        <argsstring>(const char *s)</argsstring>
        <name>mm_strdup</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="121" column="6" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="121" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="mmio__nist_8h_1a5949d10b55cd420aa0ea7ba05ac03268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * mm_typecode_to_str</definition>
        <argsstring>(MM_typecode matcode)</argsstring>
        <name>mm_typecode_to_str</name>
        <param>
          <type>MM_typecode</type>
          <declname>matcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="128" column="6" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="128" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="mmio__nist_8h_1ad8204d233b87eeba15de78abae85c814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mm_read_banner</definition>
        <argsstring>(FILE *f, MM_typecode *matcode)</argsstring>
        <name>mm_read_banner</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>MM_typecode *</type>
          <declname>matcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="183" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="183" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="mmio__nist_8h_1acf80791ad47f3c907c9145f7573eb33c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mm_read_mtx_crd_size</definition>
        <argsstring>(FILE *f, int *M, int *N, int *nz)</argsstring>
        <name>mm_read_mtx_crd_size</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>M</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="268" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="268" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="mmio__nist_8h_1a77d0cc326838831814294614d1010ca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mm_read_mtx_array_size</definition>
        <argsstring>(FILE *f, int *M, int *N)</argsstring>
        <name>mm_read_mtx_array_size</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>M</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" line="298" column="5" bodyfile="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h" bodystart="298" bodyend="325"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/><sp/><sp/>Matrix<sp/>Market<sp/>I/O<sp/>library<sp/>for<sp/>ANSI<sp/>C</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/><sp/><sp/>See<sp/>http://math.nist.gov/MatrixMarket<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MM_IO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MM_IO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MM_MAX_LINE_LENGTH<sp/>1025</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MatrixMarketBanner<sp/>&quot;%%MatrixMarket&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MM_MAX_TOKEN_LENGTH<sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>MM_typecode[4];</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*********************<sp/>MM_typecode<sp/>query<sp/>fucntions<sp/>***************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_is_matrix(typecode)<sp/><sp/>((typecode)[0]==&apos;M&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_is_sparse(typecode)<sp/><sp/>((typecode)[1]==&apos;C&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_is_coordinate(typecode)((typecode)[1]==&apos;C&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_is_dense(typecode)<sp/><sp/><sp/>((typecode)[1]==&apos;A&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_is_array(typecode)<sp/><sp/><sp/>((typecode)[1]==&apos;A&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_is_complex(typecode)<sp/>((typecode)[2]==&apos;C&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_is_real(typecode)<sp/><sp/><sp/><sp/>((typecode)[2]==&apos;R&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_is_pattern(typecode)<sp/>((typecode)[2]==&apos;P&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_is_integer(typecode)<sp/>((typecode)[2]==&apos;I&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_is_symmetric(typecode)((typecode)[3]==&apos;S&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_is_general(typecode)<sp/>((typecode)[3]==&apos;G&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_is_skew(typecode)<sp/><sp/><sp/><sp/>((typecode)[3]==&apos;K&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_is_hermitian(typecode)((typecode)[3]==&apos;H&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mm_is_valid(MM_typecode<sp/>matcode)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mm_is_matrix(matcode))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm_is_dense(matcode)<sp/>&amp;&amp;<sp/>mm_is_pattern(matcode))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm_is_real(matcode)<sp/>&amp;&amp;<sp/>mm_is_hermitian(matcode))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm_is_pattern(matcode)<sp/>&amp;&amp;<sp/>(mm_is_hermitian(matcode)<sp/>||<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm_is_skew(matcode)))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*********************<sp/>MM_typecode<sp/>modify<sp/>fucntions<sp/>***************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_set_matrix(typecode)<sp/>((*typecode)[0]=&apos;M&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_set_coordinate(typecode)<sp/>((*typecode)[1]=&apos;C&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_set_array(typecode)<sp/><sp/>((*typecode)[1]=&apos;A&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_set_dense(typecode)<sp/><sp/>mm_set_array(typecode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_set_sparse(typecode)<sp/>mm_set_coordinate(typecode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_set_complex(typecode)((*typecode)[2]=&apos;C&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_set_real(typecode)<sp/><sp/><sp/>((*typecode)[2]=&apos;R&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_set_pattern(typecode)((*typecode)[2]=&apos;P&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_set_integer(typecode)((*typecode)[2]=&apos;I&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_set_symmetric(typecode)((*typecode)[3]=&apos;S&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_set_general(typecode)((*typecode)[3]=&apos;G&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_set_skew(typecode)<sp/><sp/><sp/>((*typecode)[3]=&apos;K&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_set_hermitian(typecode)((*typecode)[3]=&apos;H&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_clear_typecode(typecode)<sp/>((*typecode)[0]=(*typecode)[1]=<sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*typecode)[2]=&apos;<sp/>&apos;,(*typecode)[3]=&apos;G&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mm_initialize_typecode(typecode)<sp/>mm_clear_typecode(typecode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">/*********************<sp/>Matrix<sp/>Market<sp/>error<sp/>codes<sp/>***************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MM_COULD_NOT_READ_FILE<sp/><sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MM_PREMATURE_EOF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MM_NOT_MTX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MM_NO_HEADER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MM_UNSUPPORTED_TYPE<sp/><sp/><sp/><sp/><sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MM_LINE_TOO_LONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MM_COULD_NOT_WRITE_FILE<sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/********************<sp/>Matrix<sp/>Market<sp/>internal<sp/>definitions<sp/>********************</highlight></codeline>
<codeline lineno="91"><highlight class="comment"></highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/>MM_matrix_typecode:<sp/>4-character<sp/>sequence</highlight></codeline>
<codeline lineno="93"><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ojbect<sp/><sp/><sp/><sp/><sp/><sp/>sparse/<sp/><sp/><sp/><sp/><sp/>data<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dense<sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scheme</highlight></codeline>
<codeline lineno="96"><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/>string<sp/>position:<sp/><sp/>[0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[2]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[3]</highlight></codeline>
<codeline lineno="98"><highlight class="comment"></highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/>Matrix<sp/>typecode:<sp/><sp/>M(atrix)<sp/><sp/>C(oord)<sp/><sp/><sp/><sp/><sp/><sp/>R(eal)<sp/><sp/><sp/><sp/><sp/><sp/>G(eneral)</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A(array)<sp/><sp/><sp/><sp/>C(omplex)<sp/><sp/><sp/>H(ermitian)</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P(attern)<sp/><sp/><sp/>S(ymmetric)</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I(nteger)<sp/><sp/><sp/>K(kew)</highlight></codeline>
<codeline lineno="103"><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>***********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>MM_MTX_STR[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;matrix&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>MM_ARRAY_STR[]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;array&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>MM_DENSE_STR[]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;array&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>MM_COORDINATE_STR[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;coordinate&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>MM_SPARSE_STR[]<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;coordinate&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>MM_COMPLEX_STR[]<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;complex&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>MM_REAL_STR[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;real&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>MM_INT_STR[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;integer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>MM_GENERAL_STR[]<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;general&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>MM_SYMM_STR[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;symmetric&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>MM_HERM_STR[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;hermitian&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>MM_SKEW_STR[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;skew-symmetric&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>MM_PATTERN_STR[]<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pattern&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mm_strdup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>strlen(s);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s2<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>malloc((len+1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcpy(s2,<sp/>s);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mm_typecode_to_str(MM_typecode<sp/>matcode)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[MM_MAX_LINE_LENGTH];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*types[4];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mm_strdup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>MTX<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm_is_matrix(matcode))<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[0]<sp/>=<sp/>MM_MTX_STR;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>CRD<sp/>or<sp/>ARR<sp/>matrix<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm_is_sparse(matcode))</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[1]<sp/>=<sp/>MM_SPARSE_STR;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm_is_dense(matcode))</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[1]<sp/>=<sp/>MM_DENSE_STR;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>element<sp/>data<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm_is_real(matcode))</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[2]<sp/>=<sp/>MM_REAL_STR;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm_is_complex(matcode))</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[2]<sp/>=<sp/>MM_COMPLEX_STR;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm_is_pattern(matcode))</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[2]<sp/>=<sp/>MM_PATTERN_STR;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm_is_integer(matcode))</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[2]<sp/>=<sp/>MM_INT_STR;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>symmetry<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm_is_general(matcode))</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[3]<sp/>=<sp/>MM_GENERAL_STR;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm_is_symmetric(matcode))</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[3]<sp/>=<sp/>MM_SYMM_STR;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm_is_hermitian(matcode))</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[3]<sp/>=<sp/>MM_HERM_STR;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mm_is_skew(matcode))</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[3]<sp/>=<sp/>MM_SKEW_STR;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buffer,</highlight><highlight class="stringliteral">&quot;%s<sp/>%s<sp/>%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>types[0],<sp/>types[1],<sp/>types[2],<sp/>types[3]);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mm_strdup(buffer);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mm_read_banner(FILE<sp/>*f,<sp/>MM_typecode<sp/>*matcode)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[MM_MAX_LINE_LENGTH];</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>banner[MM_MAX_TOKEN_LENGTH];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mtx[MM_MAX_TOKEN_LENGTH];<sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>crd[MM_MAX_TOKEN_LENGTH];</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data_type[MM_MAX_TOKEN_LENGTH];</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>storage_scheme[MM_MAX_TOKEN_LENGTH];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>mm_clear_typecode(matcode);<sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fgets(line,<sp/>MM_MAX_LINE_LENGTH,<sp/>f)<sp/>==<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MM_PREMATURE_EOF;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf(line,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%s<sp/>%s<sp/>%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>banner,<sp/>mtx,<sp/>crd,<sp/>data_type,<sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_scheme)<sp/>!=<sp/>5)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MM_PREMATURE_EOF;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p=mtx;<sp/>*p!=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>*p=tolower(*p),p++);<sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>to<sp/>lower<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p=crd;<sp/>*p!=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>*p=tolower(*p),p++);<sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p=data_type;<sp/>*p!=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>*p=tolower(*p),p++);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p=storage_scheme;<sp/>*p!=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>*p=tolower(*p),p++);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>banner<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(banner,<sp/>MatrixMarketBanner,<sp/>strlen(MatrixMarketBanner))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MM_NO_HEADER;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>field<sp/>should<sp/>be<sp/>&quot;mtx&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(mtx,<sp/>MM_MTX_STR)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>MM_UNSUPPORTED_TYPE;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>mm_set_matrix(matcode);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>second<sp/>field<sp/>describes<sp/>whether<sp/>this<sp/>is<sp/>a<sp/>sparse<sp/>matrix<sp/>(in<sp/>coordinate</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storgae)<sp/>or<sp/>a<sp/>dense<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(crd,<sp/>MM_SPARSE_STR)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm_set_sparse(matcode);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(crd,<sp/>MM_DENSE_STR)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm_set_dense(matcode);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MM_UNSUPPORTED_TYPE;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>third<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(data_type,<sp/>MM_REAL_STR)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm_set_real(matcode);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(data_type,<sp/>MM_COMPLEX_STR)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm_set_complex(matcode);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(data_type,<sp/>MM_PATTERN_STR)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm_set_pattern(matcode);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(data_type,<sp/>MM_INT_STR)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm_set_integer(matcode);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MM_UNSUPPORTED_TYPE;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fourth<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(storage_scheme,<sp/>MM_GENERAL_STR)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm_set_general(matcode);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(storage_scheme,<sp/>MM_SYMM_STR)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm_set_symmetric(matcode);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(storage_scheme,<sp/>MM_HERM_STR)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm_set_hermitian(matcode);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(storage_scheme,<sp/>MM_SKEW_STR)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mm_set_skew(matcode);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MM_UNSUPPORTED_TYPE;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mm_read_mtx_crd_size(FILE<sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*M,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*nz<sp/>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[MM_MAX_LINE_LENGTH];</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_items_read;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>return<sp/>null<sp/>parameter<sp/>values,<sp/>in<sp/>case<sp/>we<sp/>exit<sp/>with<sp/>errors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>*M<sp/>=<sp/>*N<sp/>=<sp/>*nz<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>continue<sp/>scanning<sp/>until<sp/>you<sp/>reach<sp/>the<sp/>end-of-comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fgets(line,MM_MAX_LINE_LENGTH,f)<sp/>==<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MM_PREMATURE_EOF;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(line[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>line[]<sp/>is<sp/>either<sp/>blank<sp/>or<sp/>has<sp/>M,N,<sp/>nz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf(line,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>M,<sp/>N,<sp/>nz)<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_items_read<sp/>=<sp/>fscanf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>M,<sp/>N,<sp/>nz);<sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_items_read<sp/>==<sp/>EOF)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MM_PREMATURE_EOF;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(num_items_read<sp/>!=<sp/>3);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mm_read_mtx_array_size(FILE<sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*M,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*N)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[MM_MAX_LINE_LENGTH];</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_items_read;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>return<sp/>null<sp/>parameter<sp/>values,<sp/>in<sp/>case<sp/>we<sp/>exit<sp/>with<sp/>errors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>*M<sp/>=<sp/>*N<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>continue<sp/>scanning<sp/>until<sp/>you<sp/>reach<sp/>the<sp/>end-of-comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fgets(line,MM_MAX_LINE_LENGTH,f)<sp/>==<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MM_PREMATURE_EOF;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(line[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>line[]<sp/>is<sp/>either<sp/>blank<sp/>or<sp/>has<sp/>M,N,<sp/>nz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf(line,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>M,<sp/>N)<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>a<sp/>blank<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_items_read<sp/>=<sp/>fscanf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>M,<sp/>N);<sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_items_read<sp/>==<sp/>EOF)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MM_PREMATURE_EOF;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(num_items_read<sp/>!=<sp/>2);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//int<sp/>mm_write_banner(FILE<sp/>*f,<sp/>MM_typecode<sp/>matcode);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//int<sp/>mm_write_mtx_crd_size(FILE<sp/>*f,<sp/>int<sp/>M,<sp/>int<sp/>N,<sp/>int<sp/>nz);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">//int<sp/>mm_write_mtx_array_size(FILE<sp/>*f,<sp/>int<sp/>M,<sp/>int<sp/>N);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>high<sp/>level<sp/>routines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//int<sp/>mm_write_mtx_crd(char<sp/>fname[],<sp/>int<sp/>M,<sp/>int<sp/>N,<sp/>int<sp/>nz,<sp/>int<sp/>I[],<sp/>int<sp/>J[],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>val[],<sp/>MM_typecode<sp/>matcode);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//int<sp/>mm_read_mtx_crd_data(FILE<sp/>*f,<sp/>int<sp/>M,<sp/>int<sp/>N,<sp/>int<sp/>nz,<sp/>int<sp/>I[],<sp/>int<sp/>J[],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>val[],<sp/>MM_typecode<sp/>matcode);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//int<sp/>mm_read_mtx_crd_entry(FILE<sp/>*f,<sp/>int<sp/>*I,<sp/>int<sp/>*J,<sp/>double<sp/>*real,<sp/>double<sp/>*img,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MM_typecode<sp/>matcode);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//int<sp/>mm_read_unsymmetric_sparse(const<sp/>char<sp/>*fname,<sp/>int<sp/>*M_,<sp/>int<sp/>*N_,<sp/>int<sp/>*nz_,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>**val_,<sp/>int<sp/>**I_,<sp/>int<sp/>**J_);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio_nist.h"/>
  </compounddef>
</doxygen>
