<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="proxysort_8hpp" kind="file" language="C++">
    <compoundname>proxysort.hpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">cassert</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">functional</includes>
    <includes local="no">numeric</includes>
    <includes local="no">vector</includes>
    <includes local="no">execution</includes>
    <includedby refid="build_8hpp" local="yes">/Users/lums/NWmath/NWgr/include/nwgraph/build.hpp</includedby>
    <includedby refid="compressed_8hpp" local="yes">/Users/lums/NWmath/NWgr/include/nwgraph/containers/compressed.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/util/proxysort.hpp</label>
        <link refid="proxysort_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="3">
        <label>cassert</label>
      </node>
      <node id="4">
        <label>cstddef</label>
      </node>
      <node id="5">
        <label>cstdint</label>
      </node>
      <node id="9">
        <label>execution</label>
      </node>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="7">
        <label>numeric</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/adjacency.hpp</label>
        <link refid="adjacency_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/algorithms/bfs.hpp</label>
        <link refid="algorithms_2bfs_8hpp"/>
      </node>
      <node id="11">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/algorithms/delta_stepping.hpp</label>
        <link refid="algorithms_2delta__stepping_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/algorithms/page_rank.hpp</label>
        <link refid="algorithms_2page__rank_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/build.hpp</label>
        <link refid="build_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/containers/compressed.hpp</label>
        <link refid="compressed_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/csc.hpp</label>
        <link refid="csc_8hpp_source"/>
      </node>
      <node id="5">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/csr.hpp</label>
        <link refid="csr_8hpp_source"/>
      </node>
      <node id="15">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/experimental/algorithms/bfs.hpp</label>
        <link refid="experimental_2algorithms_2bfs_8hpp_source"/>
      </node>
      <node id="12">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/experimental/algorithms/delta_stepping.hpp</label>
        <link refid="experimental_2algorithms_2delta__stepping_8hpp_source"/>
      </node>
      <node id="14">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/experimental/algorithms/page_rank.hpp</label>
        <link refid="experimental_2algorithms_2page__rank_8hpp_source"/>
      </node>
      <node id="6">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio.hpp</label>
        <link refid="mmio_8hpp_source"/>
      </node>
      <node id="1">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/util/proxysort.hpp</label>
        <link refid="proxysort_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/vofos.hpp</label>
        <link refid="vofos_8hpp_source"/>
      </node>
      <node id="8">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/volos.hpp</label>
        <link refid="volos_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacenw">nw</innernamespace>
    <innernamespace refid="namespacenw_1_1util">nw::util</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NW<sp/>Graph<sp/>(aka<sp/>GraphPack)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(c)<sp/>Pacific<sp/>Northwest<sp/>National<sp/>Laboratory<sp/>2018-2021<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(c)<sp/>University<sp/>of<sp/>Washington<sp/>2018-2021<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>terms<sp/>of<sp/>include<sp/>LICENSE<sp/>file<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Authors:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Andrew<sp/>Lumsdaine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Kevin<sp/>Deweese<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NW_UTIL_PROXYSORT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NW_UTIL_PROXYSORT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;execution&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">nw<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>template&lt;typename<sp/>ThingToSort,<sp/>typename<sp/>Comparator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>proxysort(const<sp/>ThingToSort&amp;<sp/>x,<sp/>std::vector&lt;size_t&gt;&amp;<sp/>perm)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>std::iota(perm.begin(),<sp/>perm.end(),<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::sort(perm.begin(),<sp/>perm.end(),<sp/>[&amp;](auto<sp/>a,<sp/>auto<sp/>b)<sp/>{<sp/>return<sp/>x(a)<sp/>&gt;<sp/>x(b);<sp/>});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ThingToSort,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Comparator,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IntT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ExecutionPolicy<sp/>=<sp/>std::execution::parallel_unsequenced_policy&gt;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>proxysort(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ThingToSort&amp;<sp/>x,<sp/>std::vector&lt;IntT&gt;&amp;<sp/>perm,<sp/>Comparator<sp/>comp<sp/>=<sp/>std::less&lt;IntT&gt;(),<sp/>ExecutionPolicy<sp/>policy<sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>assert(perm.size()<sp/>==<sp/>x.size());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>tbb::parallel_for(tbb::blocked_range(0ul,<sp/>perm.size()),<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>i<sp/>=<sp/>r.begin(),<sp/>e<sp/>=<sp/>r.end();<sp/>i<sp/>!=<sp/>e;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perm[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>std::iota(perm.begin(),<sp/>perm.end(),<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>Parallelize<sp/>Me!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>assert(perm.begin()<sp/>!=<sp/>perm.end());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>std::sort(</highlight><highlight class="comment">/*policy,*/</highlight><highlight class="normal"><sp/>perm.begin(),<sp/>perm.end(),<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>b)<sp/>{<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(perm.size()<sp/>==<sp/>x.size());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(a<sp/>&lt;<sp/>x.size());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(b<sp/>&lt;<sp/>x.size());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>comp(x[a],<sp/>x[b]);<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IntT<sp/>=<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Comparator,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ThingToSort,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ExecutionPolicy<sp/>=<sp/>std::execution::parallel_unsequenced_policy&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proxysort(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ThingToSort&amp;<sp/>x,<sp/>Comparator<sp/>comp<sp/>=<sp/>std::less&lt;IntT&gt;(),<sp/>ExecutionPolicy<sp/>policy<sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>std::vector&lt;IntT&gt;<sp/>perm(x.size());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>proxysort(x,<sp/>perm,<sp/>comp,<sp/>policy);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>perm;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>util</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NW_UTIL_PROXYSORT_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/lums/NWmath/NWgr/include/nwgraph/util/proxysort.hpp"/>
  </compounddef>
</doxygen>
