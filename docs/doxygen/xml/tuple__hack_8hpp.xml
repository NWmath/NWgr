<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="tuple__hack_8hpp" kind="file" language="C++">
    <compoundname>tuple_hack.hpp</compoundname>
    <includes local="no">cstddef</includes>
    <includes local="no">tuple</includes>
    <includes local="no">utility</includes>
    <includedby refid="soa_8hpp" local="yes">/Users/lums/NWmath/NWgr/include/nwgraph/containers/soa.hpp</includedby>
    <includedby refid="zip_8hpp" local="yes">/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/util/tuple_hack.hpp</label>
        <link refid="tuple__hack_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstddef</label>
      </node>
      <node id="3">
        <label>tuple</label>
      </node>
      <node id="4">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/adjacency.hpp</label>
        <link refid="adjacency_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/algorithms/bfs.hpp</label>
        <link refid="algorithms_2bfs_8hpp"/>
      </node>
      <node id="9">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/algorithms/delta_stepping.hpp</label>
        <link refid="algorithms_2delta__stepping_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/algorithms/page_rank.hpp</label>
        <link refid="algorithms_2page__rank_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/algorithms/spMatspMat.hpp</label>
        <link refid="sp_matsp_mat_8hpp_source"/>
      </node>
      <node id="22">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/build.hpp</label>
        <link refid="build_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/containers/compressed.hpp</label>
        <link refid="compressed_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/containers/soa.hpp</label>
        <link refid="soa_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/containers/zip.hpp</label>
        <link refid="zip_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/coo.hpp</label>
        <link refid="coo_8hpp_source"/>
      </node>
      <node id="5">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/csc.hpp</label>
        <link refid="csc_8hpp_source"/>
      </node>
      <node id="6">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/csr.hpp</label>
        <link refid="csr_8hpp_source"/>
      </node>
      <node id="14">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/edge_list.hpp</label>
        <link refid="edge__list_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/experimental/algorithms/bfs.hpp</label>
        <link refid="experimental_2algorithms_2bfs_8hpp_source"/>
      </node>
      <node id="10">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/experimental/algorithms/delta_stepping.hpp</label>
        <link refid="experimental_2algorithms_2delta__stepping_8hpp_source"/>
      </node>
      <node id="12">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/experimental/algorithms/page_rank.hpp</label>
        <link refid="experimental_2algorithms_2page__rank_8hpp_source"/>
      </node>
      <node id="17">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/generators/configuration_model.hpp</label>
        <link refid="configuration__model_8hpp_source"/>
      </node>
      <node id="7">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/io/mmio.hpp</label>
        <link refid="mmio_8hpp_source"/>
      </node>
      <node id="1">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/util/tuple_hack.hpp</label>
        <link refid="tuple__hack_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/vofos.hpp</label>
        <link refid="vofos_8hpp_source"/>
      </node>
      <node id="19">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/volos.hpp</label>
        <link refid="volos_8hpp_source"/>
      </node>
      <node id="20">
        <label>/Users/lums/NWmath/NWgr/include/nwgraph/vovos.hpp</label>
        <link refid="vovos_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structnw_1_1graph_1_1is__swappable" prot="public">nw::graph::is_swappable</innerclass>
    <innerclass refid="structnw_1_1graph_1_1is__swappable_3_01_t_01_4" prot="public">nw::graph::is_swappable&lt; T &gt;</innerclass>
    <innerclass refid="structnw_1_1graph_1_1is__swappable_3_01std_1_1tuple_3_01_ts_8_8_8_01_4_01_4" prot="public">nw::graph::is_swappable&lt; std::tuple&lt; Ts... &gt; &gt;</innerclass>
    <innernamespace refid="namespacenw">nw</innernamespace>
    <innernamespace refid="namespacenw_1_1graph">nw::graph</innernamespace>
    <innernamespace refid="namespacestd">std</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NW<sp/>Graph<sp/>(aka<sp/>GraphPack)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(c)<sp/>Pacific<sp/>Northwest<sp/>National<sp/>Laboratory<sp/>2018-2021<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(c)<sp/>University<sp/>of<sp/>Washington<sp/>2018-2021<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>terms<sp/>of<sp/>include<sp/>LICENSE<sp/>file<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Authors:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Andrew<sp/>Lumsdaine<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NWGRAPH_TUPLE_HACK_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NWGRAPH_TUPLE_HACK_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">nw::graph<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="24" refid="structnw_1_1graph_1_1is__swappable" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnw_1_1graph_1_1is__swappable" kindref="compound">is_swappable</ref><sp/>:<sp/>std::false_type<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(std::is_lvalue_reference_v&lt;T&gt;)</highlight></codeline>
<codeline lineno="27" refid="structnw_1_1graph_1_1is__swappable_3_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnw_1_1graph_1_1is__swappable_3_01_t_01_4" kindref="compound">is_swappable&lt;T&gt;</ref><sp/>:<sp/>std::true_type<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="30" refid="structnw_1_1graph_1_1is__swappable_3_01std_1_1tuple_3_01_ts_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnw_1_1graph_1_1is__swappable" kindref="compound">is_swappable</ref>&lt;std::tuple&lt;Ts...&gt;&gt;<sp/>:<sp/>std::conjunction&lt;is_swappable&lt;Ts&gt;...&gt;<sp/>{};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nw::graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">std<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Ts&gt;<sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>(<ref refid="structnw_1_1graph_1_1is__swappable" kindref="compound">nw::graph::is_swappable&lt;Ts&gt;::value</ref><sp/>&amp;&amp;<sp/>...)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swap(std::tuple&lt;Ts...&gt;&amp;&amp;<sp/>x,<sp/>std::tuple&lt;Ts...&gt;&amp;&amp;<sp/>y)<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::swap;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::get;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>[&amp;]&lt;std::size_t...<sp/>i&gt;(std::index_sequence&lt;i...&gt;)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(swap(get&lt;i&gt;(x),<sp/>get&lt;i&gt;(y)),<sp/>...);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}(std::make_index_sequence&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Ts)&gt;());</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Ts,<sp/>std::size_t...<sp/>Is&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swap(std::tuple&lt;Ts&amp;...&gt;&amp;&amp;<sp/>x,<sp/>std::tuple&lt;Ts&amp;...&gt;&amp;&amp;<sp/>y,<sp/>std::index_sequence&lt;Is...&gt;)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>(std::swap(std::get&lt;Is&gt;(x),<sp/>std::get&lt;Is&gt;(y)),<sp/>...);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swap(std::tuple&lt;Ts&amp;...&gt;&amp;&amp;<sp/>x,<sp/>std::tuple&lt;Ts&amp;...&gt;&amp;&amp;<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>swap(std::move(x),<sp/>std::move(y),<sp/>std::make_index_sequence&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Ts)&gt;());</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NWGRAPH_TUPLE_HACK_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/lums/NWmath/NWgr/include/nwgraph/util/tuple_hack.hpp"/>
  </compounddef>
</doxygen>
